{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(smd/ulsph/effm|temp/uef|damage/atom|smd/tlsph/dt|heat/flux|erotate/asphere|stress/atom|temp/profile|smd/hourglass/error|cna/atom|gyration|adf|compute|temp/cs|erotate/rigid|reduce/chunk|smd/tlsph/defgrad|smd/damage|entropy/atom|temp/region|basal/atom|mliap|centro/atom|vcm/chunk|ackland/atom|smd/tlsph/strain|ke/atom|property/chunk|bond/local|smd/rho|pair/local|angle|pe|com/chunk|temp/deform/eff|temp/rotate|smd/ulsph/stress|temp/region/eff|temp/chunk|improper/local|ke/atom/eff|smd/vol|property/local|ke|pressure|hexorder/atom|ptm/atom|msd/chunk|temp/deform|edpd/temp/atom|smd/triangle/vertices|smd/internal/energy|temp/drude|chunk/atom|orientorder/atom|orientorder/atom/kk|smd/tlsph/num/neighs|dihedral|pair|dipole/chunk|contact/atom|msd|group/group|smd/tlsph/strain/rate|body/local|hma|gyration/chunk|viscosity/cos|temp|temp/kk|dihedral/local|pressure/cylinder|displace/atom|smd/ulsph/strain|dpd|smd/plastic/strain|momentum|mesont|rdf|tdpd/cc/atom|sph/t/atom|chunk/spread/atom|smd/plastic/strain/rate|plasticity/atom|inertia/chunk|ke/eff|rigid/local|voronoi/atom|com|cluster/atom|fragment/atom|erotate/sphere/atom|vacf|force/tally|heat/flux/tally|pe/tally|pe/mol/tally|smd/ulsph/num/neighs|dpd/atom|temp/eff|reduce|temp/asphere|temp/com|dilatation/atom|omega/chunk|improper|coord/atom|coord/atom/kk|smd/ulsph/strain/rate|ti|spin|bond|smd/tlsph/shape|event/displace|gyration/shape|msd/nongauss|temp/sphere|gyration/shape/chunk|slice|pe/atom|fep|global/atom|smd/contact/radius|sph/e/atom|ke/rigid|angle/local|smd/tlsph/stress|sna/atom|snad/atom|snav/atom|sph/rho/atom|angmom/chunk|temp/partial|cnp/atom|xrd|torque/chunk|temp/ramp|temp/body|pressure/uef|erotate/sphere|saed|property/atom|stress/mop)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(awpmd/cut|sph/lj|quip|smd/hertz|wf/cut|lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|hybrid|hybrid/kk|hybrid/overlay|hybrid/overlay/kk|multi/lucy|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|lj96/cut|lj96/cut/gpu|lj96/cut/omp|snap|snap/kk|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|meam/sw/spline|list|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|coul/tt|mesont/tpm|polymorphic|sdpd/taitwater/isothermal|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|lcbop|lj/cubic|lj/cubic/gpu|lj/cubic/omp|edip|edip/omp|edip/multi|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|tersoff/shift|drip|lj/smooth/linear|lj/smooth/linear/omp|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|exp6/rx|exp6/rx/kk|spin/dmi|spin/exchange|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|mie/cut|mie/cut/gpu|lj/switch3/coulgauss/long|zero|morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|agni|agni/omp|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|edpd|mdpd|mdpd/rhosum|pair_style|sph/rhosum|spin/neel|smtbq|e3b|lj/mdf|buck/mdf|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|spin/dipole/cut|mesocnt|comb|comb/omp|comb3|lj/charmm/coul/charmm|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|eim|eim/omp|meam/c|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|sph/heatconduction|meam/spline|meam/spline/omp|none|python|spin/magelec|reax/c|reax/c/kk|reax/c/omp|body/rounded/polygon|multi/lucy/rx|multi/lucy/rx/kk|atm|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/omp|smd/tlsph|adp|adp/omp|mgpt|coul/slater|coul/slater/cut|gw|mliap|coul/diel|coul/diel/omp|tri/lj|dsmc|coul/shield|soft|soft/gpu|soft/omp|table/rx|table/rx/kk|eff/cut|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|lubricateU|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|smd/ulsph|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|mm3/switch3/coulgauss/long|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|dpd|dpd/gpu|dpd/intel|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/omp|resquared|resquared/gpu|resquared/omp|local/density|colloid|colloid/gpu|colloid/omp|lj/smooth|lj/smooth/omp|body/nparticle|buck6d/coul/gauss/dsf|granular|ilp/graphene/hbn|sph/idealgas|kim|ufm|ufm/gpu|ufm/omp|ufm/opt|brownian|brownian/omp|brownian/poly|brownian/poly/omp|srp|sph/taitwater|nb3b/harmonic|sw|sw/gpu|sw/intel|sw/kk|sw/omp|beck|beck/gpu|beck/omp|extep|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|bop|buck/long/coul/long|buck/long/coul/long/omp|zbl|zbl/gpu|zbl/kk|zbl/omp|kolmogorov/crespi/full|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|thole|lj/cut/thole/long|lj/cut/thole/long/omp|sph/taitwater/morris|nm/cut|nm/cut/omp|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|cosine/squared|lj/sdk|lj/sdk/gpu|lj/sdk/kk|lj/sdk/omp|lj/sdk/coul/long|lj/sdk/coul/long/gpu|lj/sdk/coul/long/omp|lj/sdk/coul/msm|lj/sdk/coul/msm/omp|smd/tri_surface|body/rounded/polyhedron|line/lj|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|lebedeva/z|kolmogorov/crespi/z|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/he|momb|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|table|table/gpu|table/kk|table/omp|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(hybrid|fene|fene/intel|fene/kk|fene/omp|gaussian|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|harmonic/shift|harmonic/shift/omp|harmonic/shift/cut|harmonic/shift/cut/omp|quartic|quartic/omp|morse|morse/omp|none|mm3|class2|class2/omp|class2/kk|table|table/omp|bond_style|special|zero|oxdna/fene|oxdna2/fene|gromos|gromos/omp|nonlinear|nonlinear/omp|fene/expand|fene/expand/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(class2|class2/kk|class2/omp|class2/p6|gaussian|cosine/squared|cosine/squared/omp|cosine/delta|cosine/delta/omp|cross|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|cosine/shift/exp|cosine/shift/exp/omp|dipole|dipole/omp|cosine/buck6d|cosine|cosine/omp|cosine/kk|fourier/simple|fourier/simple/omp|quartic|quartic/omp|none|sdk|sdk/omp|angle_style|fourier|fourier/omp|charmm|charmm/intel|charmm/kk|charmm/omp|hybrid|zero|table|table/omp|cosine/periodic|cosine/periodic/omp|mm3|cosine/shift|cosine/shift/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(hybrid|spherical|dihedral_style|helix|helix/omp|none|nharmonic|nharmonic/omp|class2|class2/omp|class2/kk|multi/harmonic|multi/harmonic/omp|table|table/omp|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw|zero|quadratic|quadratic/omp|table/cut|fourier|fourier/intel|fourier/omp|cosine/shift/exp|cosine/shift/exp/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|opls|opls/intel|opls/kk|opls/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(improper_style|cossq|cossq/omp|sqdistharm|inversion/harmonic|fourier|fourier/omp|class2|class2/omp|class2/kk|ring|ring/omp|cvff|cvff/intel|cvff/omp|distharm|umbrella|umbrella/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|distance|zero|none|hybrid)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(dump|atom/adios|vtk|cfg/uef|image|molfile|netcdf|h5md)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(spring/self|nve/body|smd/move_tri_surf|drude/transform/direct|neb|rigid/meso|indent|wall/ees|nvt/sllod/eff|temp/berendsen|tmd|client/md|evaporate|nve/manifold/rattle|nvt/sphere|nvt/sphere/omp|pimd|wall/body/polyhedron|nve/dotc/langevin|bond/swap|propel/self|lb/rigid/pc/sphere|tune/kspace|cmap|mvv/dpd|mvv/edpd|spring/rg|recenter|box/relax|tfmc|nvk|wall/srd|npt/cauchy|colvars|bond/break|viscosity|controller|flow/gauss|bond/react|langevin/drude|precession/spin|edpd/source|temp/rescale|deposit|gle|nvt/asphere|nvt/asphere/omp|smd/wall_surface|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|nvt/body|smd/integrate_ulsph|planeforce|ave/histo|nvt|nvt/intel|nvt/kk|nvt/omp|npt|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|print|ipi|nve/asphere|nve/asphere/intel|adapt|adapt/fep|sph|shardlow|shardlow/kk|plumed|langevin/eff|spring/chunk|lb/viscous|smd/adjust_dt|ttm|poems|wall/reflect|wall/reflect/kk|imd|smd|temp/csvr|ave/correlate|msst|nve/asphere/noforce|atom/swap|mscg|electron/stopping|addforce|nve/dot|ave/chunk|ave/atom|hyper/global|python/invoke|grem|phonon|setforce|setforce/kk|setforce/spin|append/atoms|langevin/spin|aveforce|wall/gran/region|restrain|property/atom|property/atom/kk|ave/time|nve/tri|deform|deform/kk|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|spring|nphug|nphug/omp|qeq/reax|qeq/reax/kk|qeq/reax/omp|accelerate/cos|widom|nve/noforce|npt/body|smd/integrate_tlsph|move|qeq/comb|qeq/comb/omp|wall/piston|temp/rescale/eff|dpd/energy|dpd/energy/kk|gld|store/state|lineforce|bocs|press/berendsen|meso/move|fix|thermal/conductivity|atc|balance|addtorque|wall/body/polygon|rx|rx/kk|nph/sphere|nph/sphere/omp|viscous|nve/line|wall/reflect/stochastic|sph/stationary|nvt/eff|npt/eff|eos/table|eos/cv|python/move|shake|shake/kk|rattle|ehex|smd/setvel|efield|nve/sphere|nve/sphere/omp|nve/sphere/kk|lb/pc|tgnvt/drude|qtb|reax/c/bonds|reax/c/bonds/kk|dt/reset|halt|wall/region|numdiff|nve/eff|drude|saed/vtk|bond/create|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|reax/c/species|reax/c/species/kk|nve/limit|nph/body|manifoldforce|lb/fluid|ti/spring|nvt/manifold/rattle|nve/awpmd|npt/sphere|npt/sphere/omp|hyper/local|rhok|nph/asphere|nph/asphere/omp|qbmsst|drag|oneway|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|external|npt/asphere|npt/asphere/omp|neb/spin|ffl|qmmm|freeze|freeze/kk|srd|nve/spin|filter/corotate|momentum|momentum/kk|momentum/chunk|ave/correlate/long|nvt/uef|gravity|gravity/omp|gravity/kk|pour|nve|nve/intel|nve/kk|nve/omp|wall/gran|enforce2d|enforce2d/kk|pafi|latte|eos/table/rx|eos/table/rx/kk|lb/momentum|heat|langevin|langevin/kk|vector|gcmc|orient/fcc|store/force)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(type|gradients|computes|pair_interactions|volume_integral|scale|kernel|filter|read_restart|quadrature|unfix|reference_potential_energy|exchange|plane|create|momentum|thermal|remove_molecule|mask_direction|lumped_lambda_solve|boundary_integral|initial|remove_species|fix_flux|add_species|write_restart|output|mass_matrix|unfix_flux|fix|create_elementset|sample_frequency|localized_lambda|read|track_displacement|material|write_atom_weights|temperature_definition|internal_element_set|fields|delete_elements|box|remove_source|boundary_dynamics|internal_quadrature|atom_element_map|consistent_fe_initialization|reset_atomic_reference_positions|create_nodeset|nodeset|decomposition|electron_integration|atomic_charge|nodeset_to_elementset|add_molecule|add_to_nodeset|fix_modify|source_integration|reset_time|contour_integral|kernel_bandwidth|poisson_solver|rates|boundary_faceset|time_integration|write|atom_weight|on_the_fly|equilibrium_start|fe_md_boundary|source)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(suffix|quit|units|newton|message|undump|create_atoms|bond_write|write_restart|temper|thermo|velocity|prd|reset_mol_ids|group|replicate|timestep|neigh_modify|comm_modify|server|temper/grem|thermo_style|server mc|reset_timestep|neighbor|restart|delete_atoms|:doc:dump vtk|:doc:dump h5md|:doc:dump molfile|:doc:dump netcdf|:doc:dump image|:doc:dump movie|:doc:dump atom/adios|print|uncompute|dimension|reset_atom_ids|displace_atoms|write_dump|read_dump|processors|temper/npt|create_box|third_order|boundary|variable|min_modify|improper_coeff|atom_modify|atom_style|create_bonds|dielectric|pair_coeff|info|special_bonds|min_style|min_style spin|min_style spin/cg|lattice|bond_coeff|pair_write|jump|include|neb/spin|dihedral_coeff|dynamical_matrix|shell|hyper|group2ndx|change_box|unfix|compute_modify|thermo_modify|pair_modify|molecule|log|neb|run_style|mass|echo|next|if|comm_style|run|region|kspace_style|server md|python|partition|kspace_modify|delete_bonds|write_coeff|read_restart|angle_coeff|:ref:kim_init<kim_init command>|:ref:kim_interactions<kim_interactions command>|:ref:kim_query<kim_query command>|:ref:kim_param<kim_param command>|timer|minimize|balance|package|tad|write_data|box|read_data|rerun|clear|label|set|dump_modify)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}