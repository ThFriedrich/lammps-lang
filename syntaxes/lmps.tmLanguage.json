{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next|is_file)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_available|is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(force/tally|heat/flux/tally|heat/flux/virial/tally|pe/tally|pe/mol/tally|ke/atom/eff|temp/asphere|hexorder/atom|smd/tlsph/strain|sph/e/atom|pressure|pressure/alchemy|nbond/atom|msd|temp/com|reduce/chunk|temp/region|temp/ramp|property/atom|erotate/asphere|fep/ta|smd/tlsph/dt|dpd|smd/tlsph/defgrad|momentum|chunk/atom|smd/tlsph/shape|temp|temp/kk|smd/hourglass/error|torque/chunk|hma|smd/triangle/vertices|basal/atom|count/type|temp/cs|improper/local|saed|dpd/atom|dilatation/atom|voronoi/atom|angle|bond|efield/wolf/atom|dipole|spin|erotate/rigid|contact/atom|smd/plastic/strain/rate|compute|erotate/sphere/atom|smd/ulsph/strain|temp/sphere|ke/eff|ptm/atom|property/chunk|smd/rho|smd/contact/radius|vcm/chunk|pe|sph/t/atom|smd/ulsph/effm|pe/atom|slice|coord/atom|coord/atom/kk|pair|sna/atom|snad/atom|snav/atom|snap|sna/grid|temp/eff|erotate/sphere|erotate/sphere/kk|inertia/chunk|temp/profile|temp/partial|temp/drude|body/local|smd/plastic/strain|ke/atom|viscosity/cos|centro/atom|stress/atom|rigid/local|smd/tlsph/stress|rdf|bond/local|improper|displace/atom|temp/body|tdpd/cc/atom|damage/atom|born/matrix|smd/damage|edpd/temp/atom|sph/rho/atom|com|property/grid|pair/local|gyration/shape/chunk|global/atom|ke/rigid|temp/rotate|temp/region/eff|smd/ulsph/stress|cna/atom|dihedral|gyration|vacf|ave/sphere/atom|ave/sphere/atom/kk|smd/tlsph/strain/rate|ti|fep|event/displace|orientorder/atom|orientorder/atom/kk|smd/tlsph/num/neighs|temp/chunk|msd/nongauss|adf|stress/cartesian|fabric|ackland/atom|chunk/spread/atom|gyration/chunk|group/group|smd/ulsph/num/neighs|temp/deform|temp/deform/kk|pressure/uef|reduce|smd/internal/energy|dihedral/local|property/local|entropy/atom|xrd|temp/deform/eff|angle/local|smd/vol|dipole/chunk|stress/cylinder|com/chunk|cluster/atom|fragment/atom|angmom/chunk|efield/atom|omega/chunk|temp/uef|msd/chunk|gyration/shape|smd/ulsph/strain/rate|cnp/atom|plasticity/atom|stress/mop|heat/flux|mliap|ke)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(lj/cut/sphere|lubricateU|coul/slater|coul/slater/cut|atm|saip/metal|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|buck/long/coul/long|buck/long/coul/long/omp|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|polymorphic|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|lj/mdf|buck/mdf|drip|meam/spline|meam/spline/omp|hybrid|hybrid/kk|hybrid/overlay|hybrid/overlay/kk|hybrid/scaled|eim|eim/omp|adp|adp/kk|adp/omp|ylz|lj/relres|lj/relres/omp|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/omp|lj/expand/sphere|zero|sph/idealgas|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|none|mliap|mliap/kk|born/gauss|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|brownian|brownian/omp|brownian/poly|brownian/poly/omp|lj/switch3/coulgauss/long|beck|beck/gpu|beck/omp|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|mie/cut|mie/cut/gpu|spin/neel|lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|lcbop|sw|sw/gpu|sw/intel|sw/kk|sw/omp|sw/mod|sw/mod/omp|dsmc|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/exclude|coul/cut/global|coul/cut/omp/global|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|aip/water/2dm|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|extep|cosine/squared|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp|lj96/cut|lj96/cut/gpu|lj96/cut/omp|ufm|ufm/gpu|ufm/omp|ufm/opt|srp|local/density|lebedeva/z|body/rounded/polyhedron|multi/lucy/rx|multi/lucy/rx/kk|kim|thole|lj/cut/thole/long|lj/cut/thole/long/omp|python|coul/tt|eff/cut|mesocnt|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/he|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|sph/taitwater/morris|kolmogorov/crespi/full|smd/tri_surface|awpmd/cut|lj/cubic|lj/cubic/gpu|lj/cubic/omp|meam/sw/spline|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|soft|soft/gpu|soft/omp|smd/tlsph|gw|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|sph/heatconduction|pace|pace/kk|pace/extrapolation|multi/lucy|sw/angle/table|quip|pod|body/nparticle|reaxff|reaxff/kk|reaxff/omp|pair_style|coul/shield|edpd|mdpd|mdpd/rhosum|spin/exchange|body/rounded/polygon|morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|nm/cut|nm/cut/omp|nm/cut/split|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|granular|e3b|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|snap|snap/kk|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|table/rx|table/rx/kk|agni|agni/omp|ilp/graphene/hbn|list|edip|edip/omp|edip/multi|amoeba|amoeba/gpu|hippo|hippo/gpu|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|dpd|dpd/gpu|dpd/intel|dpd/kk|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/kk|dpd/tstat/omp|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/kk|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|coul/cut/dielectric|coul/long/dielectric|lj/cut/coul/cut/dielectric|lj/cut/coul/cut/dielectric/omp|lj/cut/coul/debye/dielectric|lj/cut/coul/debye/dielectric/omp|lj/cut/coul/long/dielectric|lj/cut/coul/long/dielectric/omp|lj/cut/coul/msm/dielectric|exp6/rx|exp6/rx/kk|lj/smooth/linear|lj/smooth/linear/omp|smd/hertz|zbl|zbl/gpu|zbl/kk|zbl/omp|mgpt|momb|smtbq|coul/diel|coul/diel/omp|nb3b/harmonic|smd/ulsph|harmonic/cut|harmonic/cut/omp|ilp/tmd|lj/spica|lj/spica/gpu|lj/spica/kk|lj/spica/omp|lj/spica/coul/long|lj/spica/coul/long/gpu|lj/spica/coul/long/omp|lj/spica/coul/msm|lj/spica/coul/msm/omp|line/lj|tri/lj|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|hdnnp|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|spin/magelec|lepton|lepton/omp|tracker|resquared|resquared/gpu|resquared/omp|table|table/gpu|table/kk|table/omp|wf/cut|sdpd/taitwater/isothermal|sph/rhosum|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|comb|comb/omp|comb3|buck6d/coul/gauss/dsf|rann|threebody/table|bpm/spring|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|bop|lj/charmm/coul/charmm|lj/charmm/coul/charmm/gpu|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|dpd/ext|dpd/ext/tstat|lj/smooth|lj/smooth/gpu|lj/smooth/omp|sph/taitwater|kolmogorov/crespi/z|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|lj/expand/coul/long/kk|sph/lj|smatb|colloid|colloid/gpu|colloid/omp|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|spin/dipole/cut|meam|meam/kk|meam/ms|meam/ms/kk|spin/dmi)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(nonlinear|nonlinear/omp|mm3|quartic|quartic/omp|mesocnt|gromos|gromos/omp|bond_style|special|bpm/rotational|hybrid|harmonic/shift/cut|harmonic/shift/cut/omp|fene|fene/intel|fene/kk|fene/omp|fene/nm|zero|fene/expand|fene/expand/omp|table|table/omp|morse|morse/omp|none|bpm/spring|class2|class2/omp|class2/kk|oxdna/fene|oxdna2/fene|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|lepton|lepton/omp|harmonic/restrain|gaussian|harmonic/shift|harmonic/shift/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(harmonic|harmonic/intel|harmonic/kk|harmonic/omp|spica|spica/omp|cosine/shift/exp|cosine/shift/exp/omp|cosine/shift|cosine/shift/omp|charmm|charmm/intel|charmm/kk|charmm/omp|table|table/omp|hybrid|dipole|dipole/omp|cosine/delta|cosine/delta/omp|mesocnt|angle_style|fourier/simple|fourier/simple/omp|none|cosine/squared|cosine/squared/omp|gaussian|amoeba|mm3|cosine/buck6d|cross|quartic|quartic/omp|zero|lepton|lepton/omp|cosine|cosine/omp|cosine/kk|fourier|fourier/omp|cosine/periodic|cosine/periodic/omp|class2|class2/kk|class2/omp|class2/p6)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(class2|class2/omp|class2/kk|cosine/shift/exp|cosine/shift/exp/omp|fourier|fourier/intel|fourier/omp|multi/harmonic|multi/harmonic/omp|dihedral_style|zero|none|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|spherical|opls|opls/intel|opls/kk|opls/omp|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw|hybrid|lepton|lepton/omp|nharmonic|nharmonic/omp|table|table/omp|table/cut|quadratic|quadratic/omp|helix|helix/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(cvff|cvff/intel|cvff/omp|inversion/harmonic|zero|class2|class2/omp|class2/kk|fourier|fourier/omp|cossq|cossq/omp|hybrid|sqdistharm|ring|ring/omp|amoeba|distharm|umbrella|umbrella/omp|improper_style|none|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|distance)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(molfile|vtk|cfg/uef|dump|image|movie|atom/adios|h5md|netcdf)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(nve/noforce|smd/integrate_tlsph|mdi/qm|nph/asphere|nph/asphere/omp|nvt/manifold/rattle|tmd|damping/cundall|eos/table/rx|eos/table/rx/kk|langevin/spin|atc|spring/self|sph|bond/create|restrain|nve/dot|plumed|amoeba/pitorsion|nve/manifold/rattle|addforce|electron/stopping|cmap|nve/limit|ti/spring|dpd/energy|dpd/energy/kk|nve/asphere|nve/asphere/gpu|nve/asphere/intel|move|orient/fcc|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|efield|viscous/sphere|lb/fluid|aveforce|eos/table|nphug|nphug/omp|langevin/eff|meso/move|widom|nve/asphere/noforce|imd|ave/atom|mdi/qmmm|property/atom|property/atom/kk|qeq/comb|qeq/comb/omp|wall/body/polyhedron|smd/wall_surface|evaporate|mol/swap|qeq/reaxff|qeq/reaxff/kk|qeq/reaxff/omp|temp/csvr|deposit|vector|drag|bond/react|ffl|nve|nve/gpu|nve/intel|nve/kk|nve/omp|brownian|brownian/sphere|tune/kspace|wall/ees|qmmm|rx|rx/kk|wall/region|deform|deform/kk|langevin|langevin/kk|spring/chunk|grem|smd/move_tri_surf|append/atoms|wall/srd|ave/time|nve/eff|electrode/conp|electrode/conq|electrode/thermo|wall/gran/region|oneway|temp/berendsen|nve/spin|pimd/langevin|nvk|neb|pair|controller|ehex|nph/body|pour|npt/sphere|npt/sphere/omp|tgnvt/drude|msst|acks2/reaxff|acks2/reaxff/kk|drude/transform/direct|langevin/drude|viscosity|nvt/sllod/eff|neb/spin|nve/sphere|nve/sphere/omp|nve/sphere/kk|reaxff/species|reaxff/species/kk|press/berendsen|colvars|shardlow|shardlow/kk|box/relax|temp/rescale/eff|ipi|rhok|nvt/eff|npt/eff|qtb|python/move|rigid/meso|ave/correlate|ttm|ttm/grid|atom/swap|print|bond/break|nve/line|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|wall/lepton|wall/morse|flow/gauss|npt/cauchy|spring/rg|sph/stationary|nvt/asphere|nvt/asphere/omp|lineforce|nve/awpmd|momentum|momentum/kk|momentum/chunk|heat/flow|nve/dotc/langevin|store/state|reaxff/bonds|reaxff/bonds/kk|numdiff/virial|gcmc|planeforce|wall/reflect/stochastic|ave/correlate/long|nve/tri|smd|mscg|srd|saed/vtk|hyper/global|python/invoke|gravity|gravity/omp|gravity/kk|viscous|viscous/kk|npt/asphere|npt/asphere/omp|manifoldforce|halt|smd/setvel|ave/histo|enforce2d|enforce2d/kk|bocs|nph/sphere|nph/sphere/omp|temp/rescale|edpd/source|polarize/bem/gmres|polarize/bem/icc|adapt|pafi|sgcmc|dt/reset|dt/reset/kk|gld|drude|nvt/body|nvt|nvt/gpu|nvt/intel|nvt/kk|nvt/omp|npt|npt/gpu|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|fix|precession/spin|nve/body|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|nvt/sllod/kk|qbmsst|nvt/uef|setforce|setforce/kk|setforce/spin|recenter|indent|heat|ave/chunk|balance|propel/self|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|tfmc|poems|thermal/conductivity|nve/bpm/sphere|wall/reflect|wall/reflect/kk|smd/integrate_ulsph|charge/regulation|wall/gran|wall/gran/kk|shake|shake/kk|rattle|wall/body/polygon|accelerate/cos|eos/cv|phonon|store/force|external|amoeba/bitorsion|lb/viscous|ave/grid|mvv/dpd|mvv/edpd|bond/swap|freeze|freeze/kk|wall/piston|filter/corotate|numdiff|adapt/fep|gle|alchemy|spring|hyper/local|nvt/sphere|nvt/sphere/omp|addtorque|lb/momentum|smd/adjust_dt|npt/body)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(initial|localized_lambda|mass_matrix|atom_weight|reset_time|write|boundary_dynamics|equilibrium_start|box|write_restart|reset_atomic_reference_positions|fix_flux|read_restart|delete_elements|unfix|remove_species|rates|momentum|boundary_integral|type|fe_md_boundary|fix|sample_frequency|computes|create_elementset|quadrature|lumped_lambda_solve|internal_element_set|atomic_charge|read|atom_element_map|output|fields|kernel_bandwidth|internal_quadrature|add_to_nodeset|gradients|create_nodeset|electron_integration|time_integration|exchange|add_species|kernel|consistent_fe_initialization|material|create|volume_integral|filter|source_integration|remove_molecule|plane|nodeset|poisson_solver|boundary_faceset|track_displacement|on_the_fly|contour_integral|pair_interactions|scale|thermal|fix_modify|remove_source|mask_direction|add_molecule|unfix_flux|write_atom_weights|source|temperature_definition|decomposition|nodeset_to_elementset|reference_potential_energy)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(fitpod|include|improper_coeff|neb/spin|tad|undump|reset_timestep|group2ndx|unfix|write_restart|minimize|processors|temper|suffix|newton|create_bonds|partition|temper/npt|log|atom_style|create_box|molecule|dimension|neigh_modify|min_style cg|min_style hftn|min_style sd|min_style quickmin|min_style fire|neb|temper/grem|create_atoms|write_coeff|read_restart|labelmap|kspace_style|delete_atoms|clear|prd|min_modify|pair_write|plugin|mdi|echo|thermo_style|timer|quit|min_style spin|min_style spin/cg|special_bonds|shell|group|region|package|units|kim|change_box|thermo|hyper|comm_style|jump|atom_modify|angle_coeff|rerun|boundary|dihedral_coeff|run_style|if|restart|label|dihedral_write|velocity|third_order|compute_modify|dielectric|dynamical_matrix|bond_coeff|pair_modify|read_data|neighbor|reset_atoms|displace_atoms|python|read_dump|mass|timestep|replicate|kspace_modify|write_dump|dump_modify|write_data|variable|thermo_modify|angle_write|lattice|bond_write|next|run|delete_bonds|info|pair_coeff|uncompute|set|print|comm_modify|balance)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}