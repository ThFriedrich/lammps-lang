{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next|is_file)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_available|is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(dpd/atom|com|ke/rigid|body/local|ackland/atom|smd/tlsph/stress|pe|erotate/sphere|erotate/sphere/kk|efield/wolf/atom|temp/drude|omega/chunk|bond/local|smd/hourglass/error|torque/chunk|temp/profile|temp/asphere|pressure/uef|count/type|chunk/spread/atom|xrd|pressure|pair|smd/vol|dipole/chunk|gyration/chunk|group/group|stress/mop|property/atom|rigid/local|temp/deform|temp/deform/kk|smd/tlsph/num/neighs|efield/atom|dipole|contact/atom|reduce/chunk|ptm/atom|dpd|reduce|temp/ramp|cna/atom|gyration|smd/triangle/vertices|smd/plastic/strain/rate|angle/local|chunk/atom|ave/sphere/atom|ave/sphere/atom/kk|orientorder/atom|orientorder/atom/kk|temp/body|msd|smd/plastic/strain|smd/tlsph/strain/rate|msd/chunk|gyration/shape|cnp/atom|cluster/atom|fragment/atom|temp/deform/eff|temp/sphere|temp/com|dilatation/atom|temp/chunk|mliap|slcsa/atom|temp/cs|damage/atom|stress/cylinder|angmom/chunk|plasticity/atom|bond|basal/atom|edpd/temp/atom|stress/atom|smd/contact/radius|sph/rho/atom|centro/atom|reaxff/atom|reaxff/atom/kk|inertia/chunk|dihedral|hma|ke/eff|fep|pressure/alchemy|event/displace|smd/tlsph/strain|temp/rotate|improper|global/atom|fabric|adf|smd/damage|viscosity/cos|temp/region/eff|voronoi/atom|smd/tlsph/dt|ke|pace|saed|heat/flux|temp/partial|displace/atom|ke/atom|nbond/atom|dihedral/local|property/grid|erotate/asphere|force/tally|heat/flux/tally|heat/flux/virial/tally|pe/tally|pe/mol/tally|smd/ulsph/effm|angle|msd/nongauss|smd/ulsph/num/neighs|ke/atom/eff|smd/tlsph/defgrad|slice|improper/local|sna/atom|snad/atom|snav/atom|snap|sna/grid|sph/t/atom|temp/uef|property/chunk|smd/internal/energy|coord/atom|coord/atom/kk|hexorder/atom|tdpd/cc/atom|erotate/rigid|fep/ta|temp/eff|property/local|spin|temp/region|com/chunk|smd/rho|sph/e/atom|pe/atom|ti|vacf|born/matrix|smd/ulsph/stress|smd/ulsph/strain/rate|rdf|stress/cartesian|entropy/atom|erotate/sphere/atom|composition/atom|composition/atom/kk|pair/local|compute|momentum|vcm/chunk|rattlers/atom|gyration/shape/chunk|smd/ulsph/strain|temp|temp/kk|smd/tlsph/shape)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|comb|comb/omp|comb3|born/gauss|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|lj/cubic|lj/cubic/gpu|lj/cubic/omp|tracker|sph/taitwater/morris|snap|snap/intel|snap/kk|resquared|resquared/gpu|resquared/omp|smd/tlsph|srp|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp|none|lj/smooth|lj/smooth/gpu|lj/smooth/omp|amoeba|amoeba/gpu|hippo|hippo/gpu|aip/water/2dm|buck/long/coul/long|buck/long/coul/long/omp|sw/angle/table|agni|agni/omp|e3b|momb|edpd|edpd/gpu|mdpd|mdpd/gpu|mdpd/rhosum|extep|sw|sw/gpu|sw/intel|sw/kk|sw/omp|sw/mod|sw/mod/omp|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|meam|meam/kk|meam/ms|meam/ms/kk|zbl|zbl/gpu|zbl/kk|zbl/omp|lj/spica|lj/spica/gpu|lj/spica/kk|lj/spica/omp|lj/spica/coul/long|lj/spica/coul/long/gpu|lj/spica/coul/long/omp|lj/spica/coul/msm|lj/spica/coul/msm/omp|mliap|mliap/kk|coul/shield|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/gpu|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/gpu|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|tri/lj|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|ilp/tmd|colloid|colloid/gpu|colloid/omp|nm/cut|nm/cut/omp|nm/cut/split|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|lj/relres|lj/relres/omp|hdnnp|table|table/gpu|table/kk|table/omp|coul/cut/dielectric|coul/long/dielectric|lj/cut/coul/cut/dielectric|lj/cut/coul/cut/dielectric/omp|lj/cut/coul/debye/dielectric|lj/cut/coul/debye/dielectric/omp|lj/cut/coul/long/dielectric|lj/cut/coul/long/dielectric/omp|lj/cut/coul/msm/dielectric|coul/diel|coul/diel/omp|body/nparticle|body/rounded/polyhedron|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|saip/metal|list|spin/magelec|spin/dmi|lj/mdf|buck/mdf|mesocnt|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|sph/taitwater|sph/taitwater/gpu|harmonic/cut|harmonic/cut/omp|lj96/cut|lj96/cut/gpu|lj96/cut/omp|coul/slater|coul/slater/cut|coul/slater/long|coul/slater/long/gpu|table/rx|table/rx/kk|quip|kolmogorov/crespi/z|body/rounded/polygon|meam/sw/spline|eff/cut|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|sph/idealgas|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/exclude|coul/cut/global|coul/cut/omp/global|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|nb3b/harmonic|lubricateU|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/kk|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|thole|lj/cut/thole/long|lj/cut/thole/long/omp|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|lj/switch3/coulgauss/long|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|smd/ulsph|ufm|ufm/gpu|ufm/omp|ufm/opt|hybrid|hybrid/kk|hybrid/overlay|hybrid/overlay/kk|hybrid/scaled|exp6/rx|exp6/rx/kk|spin/neel|python|smd/hertz|kim|reaxff|reaxff/kk|reaxff/omp|pace|pace/kk|pace/extrapolation|coul/tt|eim|eim/omp|threebody/table|multi/lucy/rx|multi/lucy/rx/kk|tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|lebedeva/z|polymorphic|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|brownian|brownian/omp|brownian/poly|brownian/poly/omp|kolmogorov/crespi/full|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|atm|multi/lucy|zero|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|adp|adp/kk|adp/omp|lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|beck|beck/gpu|beck/omp|dpd/ext|dpd/ext/tstat|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|lj/expand/coul/long/kk|lj/cut/sphere|spin/dipole/cut|dpd|dpd/gpu|dpd/intel|dpd/kk|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/kk|dpd/tstat/omp|lj/smooth/linear|lj/smooth/linear/omp|smatb|gw|ylz|ilp/graphene/hbn|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|mgpt|pair_style|bpm/spring|local/density|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/he|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|lj/charmm/coul/charmm|lj/charmm/coul/charmm/gpu|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|lj/charmmfsw/coul/long|lj/charmmfsw/coul/long/kk|lj/expand/sphere|sph/rhosum|spin/exchange|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|sph/heatconduction|sph/heatconduction/gpu|line/lj|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/kk|yukawa/colloid/omp|buck6d/coul/gauss/dsf|granular|dsmc|pod|drip|smtbq|awpmd/cut|smd/tri_surface|cosine/squared|lepton|lepton/omp|wf/cut|mie/cut|mie/cut/gpu|edip|edip/omp|edip/multi|bop|lcbop|sdpd/taitwater/isothermal|rann|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|meam/spline|meam/spline/omp|sph/lj|sph/lj/gpu|soft|soft/gpu|soft/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(quartic|quartic/omp|none|lepton|lepton/omp|gaussian|zero|gromos|gromos/omp|table|table/omp|mm3|harmonic/restrain|fene|fene/intel|fene/kk|fene/omp|fene/nm|bond_style|harmonic/shift|harmonic/shift/omp|class2|class2/omp|class2/kk|oxdna/fene|oxdna2/fene|harmonic/shift/cut|harmonic/shift/cut/omp|morse|morse/omp|bpm/rotational|fene/expand|fene/expand/omp|bpm/spring|hybrid|special|mesocnt|nonlinear|nonlinear/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(cross|hybrid|dipole|dipole/omp|fourier|fourier/omp|mm3|cosine/buck6d|charmm|charmm/intel|charmm/kk|charmm/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|amoeba|cosine|cosine/omp|cosine/kk|table|table/omp|cosine/squared|cosine/squared/omp|gaussian|cosine/shift/exp|cosine/shift/exp/omp|fourier/simple|fourier/simple/omp|cosine/shift|cosine/shift/omp|cosine/delta|cosine/delta/omp|lepton|lepton/omp|class2|class2/kk|class2/omp|class2/p6|quartic|quartic/omp|cosine/periodic|cosine/periodic/omp|angle_style|zero|mesocnt|none|spica|spica/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(class2|class2/omp|class2/kk|hybrid|quadratic|quadratic/omp|nharmonic|nharmonic/omp|lepton|lepton/omp|helix|helix/omp|opls|opls/intel|opls/kk|opls/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|multi/harmonic|multi/harmonic/omp|spherical|fourier|fourier/intel|fourier/omp|cosine/shift/exp|cosine/shift/exp/omp|zero|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw|charmmfsw/kk|table|table/omp|table/cut|dihedral_style|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(distance|inversion/harmonic|umbrella|umbrella/omp|zero|cossq|cossq/omp|amoeba|class2|class2/omp|class2/kk|fourier|fourier/omp|distharm|ring|ring/omp|hybrid|improper_style|cvff|cvff/intel|cvff/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|sqdistharm|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(atom/adios|image|movie|cfg/uef|h5md|dump|molfile|netcdf|vtk)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(colvars|press/langevin|tfmc|pair|gle|nph/body|restrain|addtorque|eos/table/rx|eos/table/rx/kk|tmd|accelerate/cos|ipi|nvk|move|mdi/qm|sgcmc|mol/swap|gravity|gravity/omp|gravity/kk|viscous/sphere|spring/rg|wall/region|numdiff/virial|npt/cauchy|nvt/body|nve/spin|thermal/conductivity|qeq/reaxff|qeq/reaxff/kk|qeq/reaxff/omp|shardlow|shardlow/kk|smd/adjust_dt|tgnvt/drude|gld|store/state|print|smd/move_tri_surf|nvt|nvt/gpu|nvt/intel|nvt/kk|nvt/omp|npt|npt/gpu|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|balance|nvt/asphere|nvt/asphere/omp|pour|fix|bond/swap|hyper/global|lb/momentum|sph|poems|nve/tri|nvt/manifold/rattle|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|wall/lepton|wall/morse|atom/swap|nve/sphere|nve/sphere/omp|nve/sphere/kk|wall/ees|mvv/dpd|mvv/edpd|imd|momentum|momentum/kk|momentum/chunk|lb/fluid|efield|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|nvt/sllod/kk|gcmc|smd/setvel|append/atoms|deposit|propel/self|bocs|nve/body|damping/cundall|nve|nve/gpu|nve/intel|nve/kk|nve/omp|pimd/langevin|npt/asphere|npt/asphere/omp|drude|bond/react|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|bond/create|meso/move|ave/correlate|adapt|press/berendsen|pafi|smd/integrate_ulsph|plumed|reaxff/species|reaxff/species/kk|drude/transform/direct|acks2/reaxff|acks2/reaxff/kk|aveforce|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|wall/gran/region|ehex|deform|deform/kk|ave/histo|external|nve/manifold/rattle|eos/table|nve/line|qbmsst|ffl|oneway|recenter|ave/correlate/long|npt/body|neb/spin|manifoldforce|nvt/sllod/eff|temp/rescale/eff|lb/viscous|heat/flow|grem|dpd/energy|dpd/energy/kk|neb|nve/asphere/noforce|nve/dotc/langevin|drag|setforce|setforce/kk|setforce/spin|ave/chunk|temp/berendsen|temp/berendsen/kk|nph/sphere|nph/sphere/omp|nve/limit|viscous|viscous/kk|ave/time|addforce|msst|wall/reflect/stochastic|temp/rescale|temp/rescale/kk|hyper/local|controller|temp/csvr|cmap|bond/break|rhok|nphug|nphug/omp|nve/awpmd|nvt/uef|rigid/meso|dt/reset|dt/reset/kk|numdiff|lineforce|brownian|brownian/sphere|heat|nvt/eff|npt/eff|python/move|nve/bpm/sphere|filter/corotate|wall/gran|wall/gran/kk|alchemy|nve/eff|wall/body/polyhedron|vector|shake|shake/kk|rattle|electron/stopping|qeq/comb|qeq/comb/omp|mdi/qmmm|planeforce|ti/spring|adapt/fep|viscosity|saed/vtk|polarize/bem/gmres|polarize/bem/icc|property/atom|property/atom/kk|ttm|ttm/grid|smd|nve/dot|smd/integrate_tlsph|ave/grid|charge/regulation|srd|reaxff/bonds|reaxff/bonds/kk|sph/stationary|phonon|langevin/drude|langevin/spin|store/force|nonaffine/displacement|orient/fcc|nph/asphere|nph/asphere/omp|npt/sphere|npt/sphere/omp|eos/cv|nve/noforce|spring/chunk|freeze|freeze/kk|nvt/sphere|nvt/sphere/omp|electrode/conp|electrode/conq|electrode/thermo|langevin/eff|qtb|amoeba/pitorsion|spring/self|wall/body/polygon|atc|langevin|langevin/kk|nve/asphere|nve/asphere/gpu|nve/asphere/intel|qmmm|wall/reflect|wall/reflect/kk|wall/piston|rx|rx/kk|smd/wall_surface|indent|ave/atom|spring|wall/srd|flow/gauss|box/relax|edpd/source|precession/spin|tune/kspace|widom|evaporate|amoeba/bitorsion|python/invoke|enforce2d|enforce2d/kk|halt)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(volume_integral|mask_direction|nodeset|boundary_dynamics|fe_md_boundary|on_the_fly|create_nodeset|contour_integral|box|fix_flux|mass_matrix|fields|temperature_definition|read_restart|write_restart|add_species|momentum|add_to_nodeset|create|type|source|consistent_fe_initialization|initial|lumped_lambda_solve|reset_time|write|fix|track_displacement|equilibrium_start|remove_molecule|kernel_bandwidth|atomic_charge|unfix|internal_quadrature|remove_species|unfix_flux|reset_atomic_reference_positions|write_atom_weights|decomposition|atom_element_map|add_molecule|filter|time_integration|exchange|material|kernel|output|boundary_integral|reference_potential_energy|scale|sample_frequency|create_elementset|computes|pair_interactions|source_integration|remove_source|fix_modify|localized_lambda|read|nodeset_to_elementset|quadrature|boundary_faceset|internal_element_set|plane|atom_weight|rates|poisson_solver|electron_integration|gradients|delete_elements|thermal)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(kim|bond_write|pair_write|run|neb/spin|set|dihedral_coeff|jump|neighbor|reset_atoms|angle_coeff|neb|quit|pair_modify|replicate|write_data|include|neigh_modify|timestep|unfix|min_style spin|min_style spin/cg|dielectric|mass|run_style|dimension|kspace_style|kspace_modify|delete_atoms|improper_coeff|bond_coeff|lattice|print|echo|suffix|read_data|temper|newton|comm_modify|boundary|comm_style|group2ndx|create_box|special_bonds|thermo_style|third_order|shell|balance|dynamical_matrix|thermo|min_style cg|min_style hftn|min_style sd|min_style quickmin|min_style fire|velocity|fitpod|thermo_modify|if|temper/npt|read_dump|tad|label|prd|plugin|temper/grem|clear|units|next|timer|displace_atoms|rerun|partition|compute_modify|processors|variable|dump_modify|delete_bonds|info|write_coeff|labelmap|create_atoms|write_restart|write_dump|mdi|angle_write|group|dihedral_write|minimize|uncompute|molecule|region|restart|python|pair_coeff|hyper|change_box|min_modify|atom_style|create_bonds|log|undump|package|read_restart|reset_timestep|atom_modify)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}