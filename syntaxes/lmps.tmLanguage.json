{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(smd/vol|temp/deform/eff|smd/plastic/strain|erotate/sphere|slice|temp/partial|gyration/chunk|torque/chunk|gyration/shape/chunk|mesont|temp/region/eff|edpd/temp/atom|pair/local|pair|event/displace|fep|mliap|vacf|temp/region|temp/drude|temp/cs|smd/hourglass/error|improper|smd/ulsph/strain|erotate/rigid|smd/contact/radius|ke/atom/eff|bond/local|plasticity/atom|spin|hexorder/atom|msd|temp/body|smd/ulsph/num/neighs|saed|dpd/atom|ptm/atom|msd/chunk|hma|temp|temp/kk|temp/uef|msd/nongauss|ackland/atom|ke/rigid|viscosity/cos|contact/atom|centro/atom|stress/atom|group/group|adf|cna/atom|smd/ulsph/strain/rate|heat/flux|improper/local|cluster/atom|fragment/atom|pressure|chunk/spread/atom|inertia/chunk|dilatation/atom|damage/atom|temp/deform|sph/e/atom|ke|smd/plastic/strain/rate|ke/atom|pe/atom|gyration|smd/tlsph/strain|temp/sphere|sna/atom|snad/atom|snav/atom|angle|tdpd/cc/atom|smd/tlsph/stress|dpd|reduce|gyration/shape|entropy/atom|voronoi/atom|xrd|erotate/asphere|coord/atom|coord/atom/kk|chunk/atom|smd/tlsph/num/neighs|pressure/uef|angle/local|temp/com|smd/tlsph/strain/rate|sph/t/atom|smd/ulsph/stress|com|dihedral|orientorder/atom|orientorder/atom/kk|erotate/sphere/atom|body/local|dihedral/local|rdf|temp/ramp|basal/atom|smd/tlsph/dt|temp/asphere|cnp/atom|temp/rotate|force/tally|heat/flux/tally|pe/tally|pe/mol/tally|angmom/chunk|global/atom|momentum|smd/internal/energy|stress/mop|smd/triangle/vertices|bond|vcm/chunk|ti|temp/profile|smd/damage|smd/ulsph/effm|displace/atom|temp/chunk|reduce/chunk|smd/tlsph/defgrad|smd/tlsph/shape|dipole/chunk|omega/chunk|rigid/local|ke/eff|sph/rho/atom|pressure/cylinder|smd/rho|pe|compute|property/chunk|property/atom|com/chunk|temp/eff|property/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|tersoff/shift|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|wf/cut|lubricateU|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|resquared|resquared/gpu|resquared/omp|kim|granular|agni|agni/omp|hybrid|hybrid/kk|hybrid/overlay|hybrid/overlay/kk|kolmogorov/crespi/z|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|soft|soft/gpu|soft/omp|lj/sdk|lj/sdk/gpu|lj/sdk/kk|lj/sdk/omp|lj/sdk/coul/long|lj/sdk/coul/long/gpu|lj/sdk/coul/long/omp|lj/sdk/coul/msm|lj/sdk/coul/msm/omp|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|tri/lj|pair_style|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/he|cosine/squared|sph/rhosum|polymorphic|brownian|brownian/omp|brownian/poly|brownian/poly/omp|sph/taitwater/morris|sph/taitwater|mgpt|smd/hertz|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|snap|snap/kk|lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|sph/heatconduction|gw|coul/shield|lj96/cut|lj96/cut/gpu|lj96/cut/omp|spin/magelec|coul/slater|coul/slater/cut|lj/mdf|buck/mdf|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|e3b|zbl|zbl/gpu|zbl/kk|zbl/omp|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|thole|lj/cut/thole/long|lj/cut/thole/long/omp|table/rx|table/rx/kk|body/rounded/polygon|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|eff/cut|nb3b/harmonic|local/density|lj/cubic|lj/cubic/gpu|lj/cubic/omp|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|beck|beck/gpu|beck/omp|sph/lj|reax/c|reax/c/kk|reax/c/omp|buck/long/coul/long|buck/long/coul/long/omp|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|lebedeva/z|quip|multi/lucy/rx|multi/lucy/rx/kk|eim|eim/omp|lj/relres|lj/relres/omp|meam/spline|meam/spline/omp|morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|buck6d/coul/gauss/dsf|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/omp|kolmogorov/crespi/full|lj/switch3/coulgauss/long|atm|dpd|dpd/gpu|dpd/intel|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/omp|nm/cut|nm/cut/omp|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp|none|lj/smooth|lj/smooth/omp|awpmd/cut|table|table/gpu|table/kk|table/omp|sph/idealgas|mesont/tpm|spin/neel|spin/dmi|zero|coul/tt|meam/c|ufm|ufm/gpu|ufm/omp|ufm/opt|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|smd/ulsph|ilp/graphene/hbn|momb|meam/sw/spline|drip|body/nparticle|lcbop|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|edip|edip/omp|edip/multi|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|coul/diel|coul/diel/omp|spin/exchange|sdpd/taitwater/isothermal|mliap|list|bop|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|extep|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|smd/tlsph|lj/charmm/coul/charmm|lj/charmm/coul/charmm/gpu|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|mesocnt|comb|comb/omp|comb3|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|spin/dipole/cut|adp|adp/omp|smd/tri_surface|lj/smooth/linear|lj/smooth/linear/omp|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|exp6/rx|exp6/rx/kk|smtbq|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|srp|line/lj|mie/cut|mie/cut/gpu|edpd|mdpd|mdpd/rhosum|mm3/switch3/coulgauss/long|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|colloid|colloid/gpu|colloid/omp|sw|sw/gpu|sw/intel|sw/kk|sw/omp|multi/lucy|body/rounded/polyhedron|python|dsmc|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(harmonic/shift|harmonic/shift/omp|bond_style|quartic|quartic/omp|morse|morse/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|table|table/omp|harmonic/shift/cut|harmonic/shift/cut/omp|oxdna/fene|oxdna2/fene|hybrid|class2|class2/omp|class2/kk|fene|fene/intel|fene/kk|fene/omp|nonlinear|nonlinear/omp|special|zero|fene/expand|fene/expand/omp|mm3|none|gromos|gromos/omp|gaussian)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(cosine/buck6d|mm3|class2|class2/kk|class2/omp|class2/p6|quartic|quartic/omp|hybrid|none|cosine/periodic|cosine/periodic/omp|cosine/shift|cosine/shift/omp|fourier|fourier/omp|gaussian|cosine/shift/exp|cosine/shift/exp/omp|zero|dipole|dipole/omp|sdk|sdk/omp|angle_style|fourier/simple|fourier/simple/omp|table|table/omp|cosine|cosine/omp|cosine/kk|cosine/squared|cosine/squared/omp|charmm|charmm/intel|charmm/kk|charmm/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|cosine/delta|cosine/delta/omp|cross)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(table|table/omp|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw|table/cut|nharmonic|nharmonic/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|class2|class2/omp|class2/kk|zero|multi/harmonic|multi/harmonic/omp|hybrid|cosine/shift/exp|cosine/shift/exp/omp|none|helix|helix/omp|quadratic|quadratic/omp|spherical|fourier|fourier/intel|fourier/omp|opls|opls/intel|opls/kk|opls/omp|dihedral_style)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(ring|ring/omp|zero|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|cossq|cossq/omp|cvff|cvff/intel|cvff/omp|distance|hybrid|fourier|fourier/omp|improper_style|none|umbrella|umbrella/omp|sqdistharm|distharm|inversion/harmonic|class2|class2/omp|class2/kk)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(cfg/uef|molfile|atom/adios|vtk|image|h5md|dump|netcdf)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(langevin/drude|dpd/energy|dpd/energy/kk|grem|nvt/body|bond/break|ehex|addtorque|precession/spin|wall/reflect|wall/reflect/kk|ave/atom|adapt|npt/asphere|npt/asphere/omp|wall/body/polyhedron|nve/tri|thermal/conductivity|tmd|controller|enforce2d|enforce2d/kk|nph/sphere|nph/sphere/omp|ti/spring|move|nve/manifold/rattle|wall/region|planeforce|balance|nph/body|accelerate/cos|smd/setvel|viscosity|dt/reset|ttm|smd/integrate_ulsph|temp/csvr|shake|shake/kk|rattle|filter/corotate|nve|nve/gpu|nve/intel|nve/kk|nve/omp|nvt/manifold/rattle|ave/correlate|eos/table/rx|eos/table/rx/kk|edpd/source|poems|recenter|nvt/sphere|nvt/sphere/omp|lb/rigid/pc/sphere|reax/c/species|reax/c/species/kk|nve/sphere|nve/sphere/omp|nve/sphere/kk|langevin|langevin/kk|rx|rx/kk|addforce|client/md|nve/asphere/noforce|smd/integrate_tlsph|deform|deform/kk|sph/stationary|bocs|bond/swap|nvt/uef|bond/create|ave/correlate/long|gld|fix|nve/awpmd|heat|ave/chunk|smd/adjust_dt|property/atom|property/atom/kk|gle|langevin/spin|nvt/asphere|nvt/asphere/omp|propel/self|neb|neb/spin|bond/react|rigid/meso|oneway|msst|mscg|nvt/sllod/eff|ipi|spring/rg|imd|lb/viscous|nve/dotc/langevin|press/berendsen|nvt/eff|npt/eff|tfmc|drude|nve/line|langevin/eff|nve/eff|npt/cauchy|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|phonon|gcmc|cmap|append/atoms|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|qeq/comb|qeq/comb/omp|mvv/dpd|mvv/edpd|tgnvt/drude|eos/table|nve/body|nve/spin|restrain|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|qtb|sph|nphug|nphug/omp|atc|plumed|external|spring|pour|freeze|freeze/kk|spring/self|gravity|gravity/omp|gravity/kk|nve/asphere|nve/asphere/gpu|nve/asphere/intel|manifoldforce|widom|hyper/global|aveforce|nvk|smd/wall_surface|python/invoke|print|saed/vtk|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|srd|nve/limit|qmmm|smd/move_tri_surf|temp/rescale/eff|orient/fcc|vector|electron/stopping|numdiff|halt|pafi|evaporate|temp/rescale|qbmsst|drude/transform/direct|smd|npt/sphere|npt/sphere/omp|efield|ffl|nve/dot|reax/c/bonds|reax/c/bonds/kk|deposit|nvt|nvt/gpu|nvt/intel|nvt/kk|nvt/omp|npt|npt/gpu|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|temp/berendsen|wall/body/polygon|npt/body|wall/piston|store/force|wall/gran|ave/histo|wall/ees|nve/noforce|lineforce|wall/reflect/stochastic|tune/kspace|latte|meso/move|pimd|setforce|setforce/kk|setforce/spin|momentum|momentum/kk|momentum/chunk|store/state|qeq/reax|qeq/reax/kk|qeq/reax/omp|shardlow|shardlow/kk|nph/asphere|nph/asphere/omp|rhok|viscous|colvars|atom/swap|indent|wall/gran/region|python/move|hyper/local|wall/srd|ave/time|eos/cv|lb/fluid|lb/momentum|flow/gauss|drag|adapt/fep|spring/chunk|lb/pc|box/relax)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(type|contour_integral|fix_modify|material|gradients|exchange|pair_interactions|fix|time_integration|add_to_nodeset|remove_source|localized_lambda|create|write_atom_weights|boundary_integral|track_displacement|write|consistent_fe_initialization|unfix|remove_molecule|lumped_lambda_solve|output|add_species|boundary_faceset|initial|equilibrium_start|electron_integration|create_elementset|atom_weight|thermal|read|internal_element_set|fields|delete_elements|fix_flux|add_molecule|momentum|box|source|volume_integral|remove_species|atom_element_map|nodeset_to_elementset|temperature_definition|computes|source_integration|write_restart|poisson_solver|read_restart|filter|create_nodeset|quadrature|mass_matrix|reset_atomic_reference_positions|nodeset|plane|internal_quadrature|rates|atomic_charge|unfix_flux|reference_potential_energy|mask_direction|fe_md_boundary|kernel|kernel_bandwidth|decomposition|sample_frequency|boundary_dynamics|on_the_fly|scale|reset_time)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(molecule|create_bonds|restart|timestep|temper/grem|comm_style|neigh_modify|displace_atoms|lattice|thermo_modify|pair_coeff|dimension|temper/npt|print|thermo|write_data|temper|neighbor|log|minimize|message|shell|next|run_style|kspace_style|neb/spin|include|atom_modify|box|jump|dump_modify|write_coeff|pair_write|group|echo|if|min_style|neb|improper_coeff|min_style spin|min_style spin/cg|dihedral_coeff|bond_write|processors|special_bonds|package|newton|balance|write_dump|delete_atoms|comm_modify|read_restart|create_atoms|python|bond_coeff|rerun|server mc|unfix|run|uncompute|replicate|timer|tad|read_dump|write_restart|mass|kim|label|velocity|angle_coeff|region|reset_mol_ids|create_box|dynamical_matrix|undump|compute_modify|reset_timestep|server md|units|partition|change_box|boundary|reset_atom_ids|server|clear|quit|kspace_modify|suffix|pair_modify|hyper|:doc:dump vtk|:doc:dump h5md|:doc:dump molfile|:doc:dump netcdf|:doc:dump image|:doc:dump movie|:doc:dump atom/adios|read_data|thermo_style|min_modify|dielectric|set|info|variable|group2ndx|delete_bonds|third_order|atom_style|prd)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}