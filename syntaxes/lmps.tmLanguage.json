{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next|is_file)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_available|is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(xrd|efield/wolf/atom|adf|erotate/sphere/atom|bond/local|hexorder/atom|msd/nongauss|edpd/temp/atom|property/local|ackland/atom|property/atom|vacf|com/chunk|temp/region|dihedral/local|pair/local|force/tally|heat/flux/tally|heat/flux/virial/tally|pe/tally|pe/mol/tally|msd|temp/ramp|stress/cylinder|stress/cartesian|smd/ulsph/strain|temp/uef|pe/atom|temp/drude|improper|smd/triangle/vertices|ke|reduce|compute|torque/chunk|entropy/atom|temp/cs|gyration/chunk|smd/ulsph/strain/rate|smd/rho|plasticity/atom|group/group|count/type|ke/rigid|sph/rho/atom|angle/local|dipole/chunk|viscosity/cos|ke/atom/eff|mliap|vcm/chunk|temp/rotate|sph/e/atom|smd/tlsph/num/neighs|temp/region/eff|pressure/uef|sna/atom|snad/atom|snav/atom|snap|sna/grid|temp/asphere|dipole|ke/atom|temp/sphere|temp/partial|composition/atom|composition/atom/kk|cnp/atom|smd/tlsph/stress|temp/deform/eff|temp/deform|temp/deform/kk|orientorder/atom|orientorder/atom/kk|msd/chunk|pe|momentum|sph/t/atom|gyration/shape/chunk|smd/tlsph/dt|smd/plastic/strain/rate|born/matrix|pressure|smd/plastic/strain|coord/atom|coord/atom/kk|ave/sphere/atom|ave/sphere/atom/kk|bond|damage/atom|chunk/atom|nbond/atom|smd/ulsph/effm|fep/ta|stress/atom|temp|temp/kk|body/local|fabric|temp/profile|tdpd/cc/atom|stress/mop|gyration/shape|rigid/local|com|global/atom|improper/local|voronoi/atom|omega/chunk|property/chunk|temp/com|smd/internal/energy|rdf|temp/chunk|erotate/asphere|centro/atom|cluster/atom|fragment/atom|smd/tlsph/strain/rate|erotate/sphere|erotate/sphere/kk|fep|dilatation/atom|efield/atom|property/grid|contact/atom|dpd/atom|smd/damage|saed|slice|chunk/spread/atom|event/displace|basal/atom|smd/contact/radius|ptm/atom|smd/vol|erotate/rigid|smd/tlsph/shape|ke/eff|ti|smd/tlsph/defgrad|spin|temp/eff|dpd|displace/atom|reduce/chunk|dihedral|pair|smd/hourglass/error|angle|smd/ulsph/num/neighs|temp/body|angmom/chunk|gyration|inertia/chunk|cna/atom|smd/tlsph/strain|hma|heat/flux|smd/ulsph/stress|pressure/alchemy)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(edpd|mdpd|mdpd/rhosum|e3b|nm/cut|nm/cut/omp|nm/cut/split|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|spin/dmi|nb3b/harmonic|lj/smooth/linear|lj/smooth/linear/omp|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|dpd|dpd/gpu|dpd/intel|dpd/kk|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/kk|dpd/tstat/omp|saip/metal|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|mgpt|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|smd/ulsph|soft|soft/gpu|soft/omp|coul/slater|coul/slater/cut|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|lj/expand/coul/long/kk|sph/lj|eim|eim/omp|harmonic/cut|harmonic/cut/omp|pace|pace/kk|pace/extrapolation|tri/lj|spin/dipole/cut|smd/hertz|body/nparticle|smd/tlsph|lcbop|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|reaxff|reaxff/kk|reaxff/omp|lj/relres|lj/relres/omp|agni|agni/omp|bop|born/gauss|kolmogorov/crespi/z|beck|beck/gpu|beck/omp|ylz|kim|granular|lj/charmm/coul/charmm|lj/charmm/coul/charmm/gpu|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|table/rx|table/rx/kk|rann|lj/switch3/coulgauss/long|sdpd/taitwater/isothermal|multi/lucy|sph/idealgas|cosine/squared|table|table/gpu|table/kk|table/omp|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|hdnnp|polymorphic|lj/cubic|lj/cubic/gpu|lj/cubic/omp|lebedeva/z|none|tracker|sph/heatconduction|ufm|ufm/gpu|ufm/omp|ufm/opt|exp6/rx|exp6/rx/kk|hybrid|hybrid/kk|hybrid/overlay|hybrid/overlay/kk|hybrid/scaled|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|dsmc|smatb|spin/neel|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/exclude|coul/cut/global|coul/cut/omp/global|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|sw|sw/gpu|sw/intel|sw/kk|sw/omp|sw/mod|sw/mod/omp|smtbq|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|adp|adp/kk|adp/omp|kolmogorov/crespi/full|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|body/rounded/polygon|body/rounded/polyhedron|meam|meam/kk|meam/ms|meam/ms/kk|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp|morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|bpm/spring|spin/magelec|srp|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|python|lj/expand/sphere|thole|lj/cut/thole/long|lj/cut/thole/long/omp|zbl|zbl/gpu|zbl/kk|zbl/omp|buck6d/coul/gauss/dsf|meam/spline|meam/spline/omp|quip|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/kk|yukawa/colloid/omp|amoeba|amoeba/gpu|hippo|hippo/gpu|mliap|mliap/kk|eff/cut|threebody/table|lj/cut/sphere|sw/angle/table|sph/taitwater/morris|smd/tri_surface|lepton|lepton/omp|momb|snap|snap/intel|snap/kk|awpmd/cut|edip|edip/omp|edip/multi|ilp/tmd|lj/mdf|buck/mdf|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|sph/taitwater|resquared|resquared/gpu|resquared/omp|dpd/ext|dpd/ext/tstat|aip/water/2dm|wf/cut|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|coul/tt|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|lj/smooth|lj/smooth/gpu|lj/smooth/omp|coul/shield|colloid|colloid/gpu|colloid/omp|coul/diel|coul/diel/omp|pod|drip|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|spin/exchange|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|list|brownian|brownian/omp|brownian/poly|brownian/poly/omp|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|line/lj|meam/sw/spline|mesocnt|coul/cut/dielectric|coul/long/dielectric|lj/cut/coul/cut/dielectric|lj/cut/coul/cut/dielectric/omp|lj/cut/coul/debye/dielectric|lj/cut/coul/debye/dielectric/omp|lj/cut/coul/long/dielectric|lj/cut/coul/long/dielectric/omp|lj/cut/coul/msm/dielectric|lj96/cut|lj96/cut/gpu|lj96/cut/omp|sph/rhosum|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|gw|pair_style|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|zero|ilp/graphene/hbn|lubricateU|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|local/density|comb|comb/omp|comb3|lj/spica|lj/spica/gpu|lj/spica/kk|lj/spica/omp|lj/spica/coul/long|lj/spica/coul/long/gpu|lj/spica/coul/long/omp|lj/spica/coul/msm|lj/spica/coul/msm/omp|atm|extep|mie/cut|mie/cut/gpu|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|multi/lucy/rx|multi/lucy/rx/kk|buck/long/coul/long|buck/long/coul/long/omp|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/kk|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/he)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(mm3|harmonic/shift|harmonic/shift/omp|quartic|quartic/omp|table|table/omp|bpm/spring|bpm/rotational|special|mesocnt|oxdna/fene|oxdna2/fene|bond_style|morse|morse/omp|zero|lepton|lepton/omp|gaussian|fene|fene/intel|fene/kk|fene/omp|fene/nm|hybrid|none|gromos|gromos/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|fene/expand|fene/expand/omp|nonlinear|nonlinear/omp|harmonic/shift/cut|harmonic/shift/cut/omp|class2|class2/omp|class2/kk|harmonic/restrain)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(lepton|lepton/omp|dipole|dipole/omp|mm3|zero|cosine/delta|cosine/delta/omp|spica|spica/omp|fourier/simple|fourier/simple/omp|quartic|quartic/omp|gaussian|table|table/omp|cosine/shift|cosine/shift/omp|cross|cosine/periodic|cosine/periodic/omp|cosine/shift/exp|cosine/shift/exp/omp|none|hybrid|mesocnt|fourier|fourier/omp|angle_style|charmm|charmm/intel|charmm/kk|charmm/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|cosine/squared|cosine/squared/omp|cosine/buck6d|amoeba|cosine|cosine/omp|cosine/kk|class2|class2/kk|class2/omp|class2/p6)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(lepton|lepton/omp|spherical|cosine/shift/exp|cosine/shift/exp/omp|fourier|fourier/intel|fourier/omp|dihedral_style|hybrid|quadratic|quadratic/omp|helix|helix/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|nharmonic|nharmonic/omp|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw|zero|table|table/omp|table/cut|multi/harmonic|multi/harmonic/omp|none|class2|class2/omp|class2/kk|opls|opls/intel|opls/kk|opls/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(sqdistharm|umbrella|umbrella/omp|zero|class2|class2/omp|class2/kk|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|cvff|cvff/intel|cvff/omp|distharm|improper_style|fourier|fourier/omp|hybrid|ring|ring/omp|cossq|cossq/omp|inversion/harmonic|distance|none|amoeba)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(image|movie|h5md|atom/adios|vtk|molfile|netcdf|dump|cfg/uef)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(numdiff/virial|dpd/energy|dpd/energy/kk|spring/chunk|qeq/reaxff|qeq/reaxff/kk|qeq/reaxff/omp|drude/transform/direct|move|nve/dotc/langevin|nph/sphere|nph/sphere/omp|grem|accelerate/cos|pafi|ti/spring|sgcmc|neb/spin|viscous/sphere|langevin/drude|eos/table|nvt/eff|npt/eff|wall/ees|langevin/eff|langevin/spin|atom/swap|damping/cundall|vector|flow/gauss|restrain|external|bond/create|shake|shake/kk|rattle|orient/fcc|temp/rescale|polarize/bem/gmres|polarize/bem/icc|gravity|gravity/omp|gravity/kk|ave/grid|edpd/source|nvk|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|nve/awpmd|heat/flow|freeze|freeze/kk|drude|qmmm|tmd|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|smd/wall_surface|wall/srd|nvt/manifold/rattle|spring|reaxff/bonds|reaxff/bonds/kk|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|wall/lepton|wall/morse|wall/region|nve/manifold/rattle|plumed|temp/rescale/eff|viscosity|srd|python/invoke|store/state|reaxff/species|reaxff/species/kk|ave/correlate|nvt/uef|tune/kspace|wall/reflect/stochastic|cmap|nvt|nvt/gpu|nvt/intel|nvt/kk|nvt/omp|npt|npt/gpu|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|lb/viscous|qtb|bond/react|nve|nve/gpu|nve/intel|nve/kk|nve/omp|msst|drag|mdi/qm|precession/spin|nve/tri|eos/table/rx|eos/table/rx/kk|sph|recenter|nve/spin|mol/swap|indent|ipi|numdiff|brownian|brownian/sphere|amoeba/pitorsion|qbmsst|ave/histo|pour|nvt/asphere|nvt/asphere/omp|adapt|wall/gran|wall/gran/kk|filter/corotate|evaporate|append/atoms|viscous|viscous/kk|ave/atom|mvv/dpd|mvv/edpd|planeforce|wall/reflect|wall/reflect/kk|bond/swap|nphug|nphug/omp|python/move|ffl|momentum|momentum/kk|momentum/chunk|nve/sphere|nve/sphere/omp|nve/sphere/kk|spring/self|heat|smd/integrate_ulsph|gle|dt/reset|dt/reset/kk|nve/body|addforce|electrode/conp|electrode/conq|electrode/thermo|nve/limit|smd/integrate_tlsph|nvt/sllod/eff|electron/stopping|langevin|langevin/kk|npt/asphere|npt/asphere/omp|ave/time|alchemy|meso/move|charge/regulation|enforce2d|enforce2d/kk|eos/cv|temp/berendsen|thermal/conductivity|npt/sphere|npt/sphere/omp|bocs|qeq/comb|qeq/comb/omp|hyper/local|property/atom|property/atom/kk|halt|box/relax|propel/self|npt/body|imd|nve/asphere|nve/asphere/gpu|nve/asphere/intel|temp/csvr|nve/dot|smd/adjust_dt|wall/body/polyhedron|rhok|nph/asphere|nph/asphere/omp|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|nvt/sllod/kk|neb|setforce|setforce/kk|setforce/spin|lb/fluid|bond/break|wall/piston|smd/setvel|nph/body|tfmc|colvars|store/force|press/berendsen|smd/move_tri_surf|smd|phonon|gld|efield|ave/chunk|acks2/reaxff|acks2/reaxff/kk|addtorque|pair|fix|poems|lineforce|amoeba/bitorsion|nve/bpm/sphere|sph/stationary|nve/line|wall/body/polygon|wall/gran/region|balance|npt/cauchy|saed/vtk|spring/rg|aveforce|adapt/fep|widom|tgnvt/drude|atc|nvt/body|deposit|manifoldforce|oneway|ave/correlate/long|shardlow|shardlow/kk|ehex|nve/asphere/noforce|rx|rx/kk|lb/momentum|deform|deform/kk|gcmc|nve/noforce|hyper/global|press/langevin|rigid/meso|nve/eff|mdi/qmmm|print|controller|ttm|ttm/grid|pimd/langevin|nvt/sphere|nvt/sphere/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(rates|kernel|nodeset|material|reset_atomic_reference_positions|contour_integral|track_displacement|box|filter|add_to_nodeset|unfix|consistent_fe_initialization|read|atom_weight|remove_species|plane|type|poisson_solver|exchange|write_restart|fix_modify|pair_interactions|write_atom_weights|lumped_lambda_solve|sample_frequency|reference_potential_energy|fe_md_boundary|create|internal_element_set|quadrature|equilibrium_start|volume_integral|atom_element_map|momentum|reset_time|internal_quadrature|initial|time_integration|output|atomic_charge|source_integration|remove_source|computes|add_molecule|create_elementset|on_the_fly|read_restart|fields|boundary_faceset|delete_elements|mask_direction|remove_molecule|nodeset_to_elementset|thermal|unfix_flux|mass_matrix|fix|kernel_bandwidth|gradients|create_nodeset|source|localized_lambda|electron_integration|scale|boundary_integral|add_species|temperature_definition|write|decomposition|boundary_dynamics|fix_flux)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(include|balance|run_style|partition|label|improper_coeff|create_atoms|dimension|pair_write|next|atom_style|lattice|group2ndx|if|read_dump|angle_write|bond_write|print|neigh_modify|timestep|thermo_modify|reset_atoms|thermo_style|mdi|velocity|tad|molecule|write_restart|jump|bond_coeff|write_dump|min_style spin|min_style spin/cg|read_restart|hyper|comm_modify|kspace_modify|run|create_box|pair_coeff|quit|variable|suffix|third_order|units|atom_modify|dihedral_write|boundary|write_coeff|clear|change_box|read_data|package|region|neb/spin|set|timer|log|comm_style|plugin|processors|dihedral_coeff|echo|reset_timestep|min_modify|uncompute|dump_modify|pair_modify|mass|temper|create_bonds|special_bonds|prd|restart|dielectric|python|replicate|write_data|labelmap|kim|delete_bonds|shell|info|neighbor|neb|group|compute_modify|fitpod|thermo|displace_atoms|kspace_style|temper/grem|min_style cg|min_style hftn|min_style sd|min_style quickmin|min_style fire|temper/npt|angle_coeff|delete_atoms|undump|newton|unfix|dynamical_matrix|rerun|minimize)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}