{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next|is_file)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_available|is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(contact/atom|property/local|reaxff/atom|reaxff/atom/kk|viscosity/cos|cnp/atom|tdpd/cc/atom|heat/flux|temp/sphere|dilatation/atom|temp/cs|born/matrix|sph/e/atom|smd/ulsph/strain|ave/sphere/atom|ave/sphere/atom/kk|erotate/sphere/atom|omega/chunk|dpd|temp/com|smd/tlsph/shape|temp/profile|angmom/chunk|pe/atom|xrd|temp/region|angle|smd/plastic/strain|com|ke/eff|smd/tlsph/strain|vcm/chunk|msd/chunk|gyration/shape|smd/ulsph/num/neighs|reduce|ke/atom|reduce/chunk|smd/tlsph/strain/rate|temp|temp/kk|cna/atom|temp/ramp|sna/atom|snad/atom|snav/atom|snap|sna/grid|smd/vol|ackland/atom|coord/atom|coord/atom/kk|global/atom|pressure/alchemy|smd/triangle/vertices|orientorder/atom|orientorder/atom/kk|smd/damage|pod/atom|podd/atom|pod/local|adf|hma|temp/rotate|rigid/local|ti|temp/drude|erotate/sphere|erotate/sphere/kk|cluster/atom|fragment/atom|temp/chunk|force/tally|heat/flux/tally|heat/flux/virial/tally|pe/tally|pe/mol/tally|rheo/property/atom|momentum|temp/eff|nbond/atom|temp/asphere|rdf|stress/atom|spin|chunk/spread/atom|fep|smd/ulsph/effm|smd/plastic/strain/rate|temp/deform/eff|temp/partial|count/type|sph/t/atom|temp/region/eff|inertia/chunk|pair|fabric|erotate/rigid|voronoi/atom|improper/local|dipole/chunk|temp/deform|temp/deform/kk|entropy/atom|gyration/shape/chunk|ke/atom/eff|smd/hourglass/error|smd/rho|angle/local|property/grid|hexorder/atom|vacf|fep/ta|pace|centro/atom|slcsa/atom|pair/local|smd/tlsph/dt|property/chunk|mliap|smd/ulsph/stress|smd/contact/radius|gyration|efield/wolf/atom|basal/atom|displace/atom|stress/cartesian|pe|improper|gyration/chunk|pressure|erotate/asphere|slice|edpd/temp/atom|property/atom|smd/internal/energy|stress/cylinder|bond|temp/body|plasticity/atom|ptm/atom|smd/ulsph/strain/rate|efield/atom|chunk/atom|dipole|bond/local|body/local|sph/rho/atom|com/chunk|dihedral|msd|dihedral/local|stress/mop|ke|composition/atom|composition/atom/kk|rattlers/atom|smd/tlsph/stress|torque/chunk|pressure/uef|msd/nongauss|smd/tlsph/defgrad|temp/uef|damage/atom|compute|smd/tlsph/num/neighs|saed|ke/rigid|group/group|event/displace|dpd/atom)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(sph/taitwater/morris|spin/neel|lebedeva/z|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|lj/relres|lj/relres/omp|smd/ulsph|sph/taitwater|sph/taitwater/gpu|lj/charmm/coul/charmm|lj/charmm/coul/charmm/gpu|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|lj/charmmfsw/coul/long|lj/charmmfsw/coul/long/kk|e3b|beck|beck/gpu|beck/omp|lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|lj/smooth/linear|lj/smooth/linear/omp|wf/cut|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|sph/lj|sph/lj/gpu|rheo/solid|kolmogorov/crespi/z|amoeba|amoeba/gpu|hippo|hippo/gpu|mliap|mliap/kk|smatb|lcbop|ilp/graphene/hbn|rheo|nm/cut|nm/cut/omp|nm/cut/split|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/kk|yukawa/colloid/omp|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp|buck6d/coul/gauss/dsf|python|gw|coul/shield|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/cut/global|coul/cut/omp/global|coul/ctip|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/exclude|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|tri/lj|lj96/cut|lj96/cut/gpu|lj96/cut/omp|coul/slater|coul/slater/cut|coul/slater/long|coul/slater/long/gpu|zbl|zbl/gpu|zbl/kk|zbl/omp|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/kk|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|extep|edip|edip/omp|edip/multi|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|coul/cut/dielectric|coul/long/dielectric|lj/cut/coul/cut/dielectric|lj/cut/coul/cut/dielectric/omp|lj/cut/coul/debye/dielectric|lj/cut/coul/debye/dielectric/omp|lj/cut/coul/long/dielectric|lj/cut/coul/long/dielectric/omp|lj/cut/coul/msm/dielectric|cosine/squared|pair_style|exp6/rx|exp6/rx/kk|dpd|dpd/gpu|dpd/intel|dpd/kk|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/kk|dpd/tstat/omp|harmonic/cut|harmonic/cut/omp|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|zero|body/nparticle|coul/tt|pod|pod/kk|ylz|lj/expand/sphere|multi/lucy|meam/spline|meam/spline/omp|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|tracker|none|spin/dmi|tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|saip/metal|local/density|polymorphic|uf3|uf3/kk|edpd|edpd/gpu|mdpd|mdpd/gpu|mdpd/rhosum|dpd/ext|dpd/ext/tstat|hybrid|hybrid/kk|hybrid/omp|hybrid/molecular|hybrid/overlay|hybrid/overlay/kk|hybrid/overlay/omp|hybrid/scaled|body/rounded/polygon|kolmogorov/crespi/full|eff/cut|adp|adp/kk|adp/omp|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/he|mie/cut|mie/cut/gpu|lj/cut/sphere|lj/smooth|lj/smooth/gpu|lj/smooth/omp|sph/heatconduction|sph/heatconduction/gpu|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|eim|eim/omp|lepton|lepton/omp|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|rebomos|rebomos/omp|momb|mesocnt|smd/tri_surface|soft|soft/gpu|soft/kk|soft/omp|mgpt|granular|smd/hertz|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|smtbq|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|bpm/spring|ilp/tmd|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|srp|table|table/gpu|table/kk|table/omp|resquared|resquared/gpu|resquared/omp|sw|sw/gpu|sw/intel|sw/kk|sw/omp|sw/mod|sw/mod/omp|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/gpu|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/gpu|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|rann|reaxff|reaxff/kk|reaxff/omp|brownian|brownian/omp|brownian/kk|brownian/poly|brownian/poly/omp|morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|sw/angle/table|list|dpd/coul/slater/long|dpd/coul/slater/long/gpu|smd/tlsph|coul/diel|coul/diel/omp|body/rounded/polyhedron|spin/dipole/cut|snap|snap/intel|snap/kk|nb3b/harmonic|born/gauss|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|pace|pace/kk|pace/extrapolation|hdnnp|line/lj|agni|agni/omp|lj/cubic|lj/cubic/gpu|lj/cubic/omp|lj/mdf|buck/mdf|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|quip|kim|dsmc|drip|sph/rhosum|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|lj/switch3/coulgauss/long|table/rx|table/rx/kk|buck/long/coul/long|buck/long/coul/long/omp|spin/exchange|threebody/table|pedone|pedone/omp|awpmd/cut|colloid|colloid/gpu|colloid/omp|lubricateU|meam|meam/kk|meam/ms|meam/ms/kk|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|sph/idealgas|meam/sw/spline|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|lj/expand/coul/long/kk|comb|comb/omp|comb3|thole|lj/cut/thole/long|lj/cut/thole/long/omp|spin/magelec|bop|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|aip/water/2dm|ufm|ufm/gpu|ufm/omp|ufm/opt|lj/spica|lj/spica/gpu|lj/spica/kk|lj/spica/omp|lj/spica/coul/long|lj/spica/coul/long/gpu|lj/spica/coul/long/omp|lj/spica/coul/long/kk|lj/spica/coul/msm|lj/spica/coul/msm/omp|multi/lucy/rx|multi/lucy/rx/kk|atm|sdpd/taitwater/isothermal)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(bpm/rotational|hybrid|hybrid/kk|nonlinear|nonlinear/omp|gaussian|zero|quartic|quartic/omp|class2|class2/omp|class2/kk|special|harmonic/shift/cut|harmonic/shift/cut/omp|harmonic/shift|harmonic/shift/omp|bpm/spring|lepton|lepton/omp|rheo/shell|harmonic/restrain|none|oxdna/fene|oxdna2/fene|fene|fene/intel|fene/kk|fene/omp|fene/nm|fene/expand|fene/expand/omp|mesocnt|gromos|gromos/omp|mm3|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|table|table/omp|bond_style|morse|morse/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(gaussian|angle_style|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|spica|spica/omp|spica/kk|none|class2|class2/kk|class2/omp|class2/p6|zero|cosine/squared/restricted|cosine/squared/restricted/omp|mesocnt|cosine/delta|cosine/delta/omp|cosine|cosine/omp|cosine/kk|cosine/shift|cosine/shift/omp|cosine/buck6d|charmm|charmm/intel|charmm/kk|charmm/omp|table|table/omp|hybrid|hybrid/kk|cosine/shift/exp|cosine/shift/exp/omp|dipole|dipole/omp|cosine/squared|cosine/squared/omp|fourier/simple|fourier/simple/omp|lepton|lepton/omp|cross|fourier|fourier/omp|amoeba|quartic|quartic/omp|cosine/periodic|cosine/periodic/omp|mm3)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(lepton|lepton/omp|opls|opls/intel|opls/kk|opls/omp|fourier|fourier/intel|fourier/omp|hybrid|hybrid/kk|zero|helix|helix/omp|cosine/shift/exp|cosine/shift/exp/omp|none|dihedral_style|table|table/omp|table/cut|multi/harmonic|multi/harmonic/omp|class2|class2/omp|class2/kk|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw|charmmfsw/kk|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|cosine/squared/restricted|spherical|nharmonic|nharmonic/omp|quadratic|quadratic/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(fourier|fourier/omp|zero|improper_style|cvff|cvff/intel|cvff/omp|umbrella|umbrella/omp|sqdistharm|distance|amoeba|hybrid|hybrid/kk|distharm|class2|class2/omp|class2/kk|cossq|cossq/omp|ring|ring/omp|inversion/harmonic|none|harmonic|harmonic/intel|harmonic/kk|harmonic/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(cfg/uef|atom/adios|molfile|image|movie|dump|h5md|netcdf|vtk)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(move|nve/sphere|nve/sphere/omp|nve/sphere/kk|smd/integrate_ulsph|wall/reflect|wall/reflect/kk|npt/body|srd|nphug|nphug/omp|charge/regulation|qtpie/reaxff|cmap|cmap/kk|viscous|viscous/kk|qeq/comb|qeq/comb/omp|acks2/reaxff|acks2/reaxff/kk|nvt|nvt/gpu|nvt/intel|nvt/kk|nvt/omp|npt|npt/gpu|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|adapt|widom|wall/srd|nph/body|temp/csvr|ave/histo|nve/limit|nve/limit/kk|numdiff/virial|neb/spin|rheo|aveforce|nve/tri|pimd/langevin|gravity|gravity/omp|gravity/kk|deform|deform/kk|rheo/oxidation|restrain|nvt/eff|npt/eff|lb/momentum|tune/kspace|sgcmc|tmd|press/berendsen|rheo/thermal|eos/table/rx|eos/table/rx/kk|neb|nve/asphere|nve/asphere/gpu|nve/asphere/intel|rheo/pressure|wall/gran/region|efield|wall/body/polygon|deform/pressure|npt/sphere|npt/sphere/omp|colvars|colvars/kk|ave/atom|gcmc|nve/dotc/langevin|pour|manifoldforce|recenter|recenter/kk|smd/integrate_tlsph|tfmc|halt|ipi|rhok|drude|shardlow|shardlow/kk|amoeba/bitorsion|ave/chunk|saed/vtk|bond/break|qeq/reaxff|qeq/reaxff/kk|qeq/reaxff/omp|qmmm|adapt/fep|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|wall/lepton|wall/morse|ave/time|nve/asphere/noforce|deposit|temp/berendsen|temp/berendsen/kk|wall/gran|wall/gran/kk|poems|nve/dot|bocs|langevin/drude|wall/body/polyhedron|nph/asphere|nph/asphere/omp|nvk|nonaffine/displacement|nve/line|reaxff/species|reaxff/species/kk|box/relax|eos/table|lb/viscous|langevin/eff|controller|hyper/local|wall/region|wall/region/kk|nve/awpmd|msst|oneway|npt/cauchy|append/atoms|freeze|freeze/kk|polarize/bem/gmres|polarize/bem/icc|thermal/conductivity|rheo/viscosity|nve/eff|fix|ffl|rx|rx/kk|ti/spring|planeforce|smd/setvel|smd/adjust_dt|spring/chunk|brownian|brownian/sphere|electrode/conp|electrode/conq|electrode/thermo|store/force|atc|hyper/global|smd/wall_surface|meso/move|enforce2d|enforce2d/kk|temp/rescale/eff|ttm|ttm/grid|qeq/point|qeq/shielded|qeq/slater|qeq/ctip|qeq/dynamic|eos/cv|ave/correlate/long|ehex|vector|spring/self|grem|nve/manifold/rattle|heat|lineforce|plumed|drude/transform/direct|nve/body|precession/spin|smd/move_tri_surf|nvt/uef|balance|damping/cundall|electron/stopping|viscous/sphere|smd|numdiff|drag|phonon|wall/flow|wall/flow/kk|flow/gauss|nvt/sphere|nvt/sphere/omp|heat/flow|mol/swap|pafi|qbmsst|nve/bpm/sphere|nph/sphere|nph/sphere/omp|property/atom|property/atom/kk|indent|shake|shake/kk|rattle|mdi/qmmm|store/state|tgnvt/drude|spring/rg|add/heat|ave/correlate|lb/fluid|addforce|nvt/asphere|nvt/asphere/omp|wall/piston|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|nvt/sllod/kk|viscosity|spring|dpd/energy|dpd/energy/kk|nvt/manifold/rattle|evaporate|dt/reset|dt/reset/kk|external|amoeba/pitorsion|nvt/sllod/eff|langevin|langevin/kk|ave/grid|python/move|alchemy|pair|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|reaxff/bonds|reaxff/bonds/kk|sph|gld|sph/stationary|gle|python/invoke|mvv/dpd|mvv/edpd|nve|nve/gpu|nve/intel|nve/kk|nve/omp|filter/corotate|npt/asphere|npt/asphere/omp|temp/rescale|temp/rescale/kk|bond/swap|langevin/spin|qtb|atom/swap|momentum|momentum/kk|momentum/chunk|wall/reflect/stochastic|rigid/meso|accelerate/cos|addtorque|setforce|setforce/kk|setforce/spin|wall/ees|print|nve/noforce|nve/spin|imd|mdi/qm|nvt/body|bond/react|bond/create|propel/self|press/langevin|edpd/source|orient/fcc)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(fix_flux|remove_molecule|add_species|internal_quadrature|fix|create_elementset|unfix_flux|reset_atomic_reference_positions|fix_modify|plane|write|boundary_integral|nodeset_to_elementset|output|create|source_integration|computes|sample_frequency|remove_species|write_atom_weights|atomic_charge|source|fe_md_boundary|gradients|nodeset|mask_direction|write_restart|thermal|scale|remove_source|add_molecule|kernel_bandwidth|kernel|initial|equilibrium_start|delete_elements|boundary_faceset|reference_potential_energy|atom_element_map|internal_element_set|lumped_lambda_solve|read_restart|pair_interactions|atom_weight|filter|mass_matrix|box|track_displacement|material|localized_lambda|volume_integral|on_the_fly|unfix|add_to_nodeset|rates|poisson_solver|type|consistent_fe_initialization|contour_integral|quadrature|read|temperature_definition|exchange|time_integration|reset_time|electron_integration|create_nodeset|decomposition|momentum|fields|boundary_dynamics)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(dimension|read_dump|bond_write|delete_bonds|write_data|print|change_box|angle_write|temper|jump|pair_modify|min_style spin|min_style spin/cg|reset_atoms|thermo_style|read_data|kspace_style|delete_atoms|atom_modify|timer|write_restart|dihedral_write|pair_coeff|group|shell|clear|neb/spin|neighbor|min_style cg|min_style hftn|min_style sd|min_style quickmin|min_style fire|molecule|uncompute|run_style|include|dihedral_coeff|lattice|dynamical_matrix|replicate|suffix|partition|minimize|temper/npt|variable|comm_style|restart|newton|min_modify|if|tad|rerun|next|atom_style|special_bonds|angle_coeff|displace_atoms|set|neigh_modify|dielectric|undump|improper_coeff|log|read_restart|mdi|quit|thermo_modify|info|third_order|bond_coeff|reset_timestep|region|neb|geturl|hyper|package|write_dump|processors|plugin|boundary|dump_modify|velocity|units|kspace_modify|run|mass|prd|comm_modify|pair_write|write_coeff|temper/grem|group2ndx|label|thermo|python|kim|balance|labelmap|unfix|create_bonds|compute_modify|timestep|create_atoms|create_box|fitpod|echo)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}