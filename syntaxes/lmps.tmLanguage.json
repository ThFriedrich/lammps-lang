{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next|is_file)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_available|is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(reduce/chunk|ave/sphere/atom|ave/sphere/atom/kk|efield/atom|basal/atom|gyration/chunk|stress/cartesian|temp/deform/eff|temp/deform|temp/deform/kk|dpd|spin|bond|smd/damage|ackland/atom|pe/atom|chunk/spread/atom|pressure/uef|nbond/atom|gyration/shape|angle|momentum|smd/tlsph/strain|entropy/atom|angmom/chunk|edpd/temp/atom|temp/eff|pressure|orientorder/atom|orientorder/atom/kk|saed|rattlers/atom|stress/atom|cna/atom|sph/e/atom|property/chunk|smd/vol|displace/atom|event/displace|reaxff/atom|reaxff/atom/kk|dilatation/atom|count/type|xrd|temp/chunk|contact/atom|improper|temp/body|msd|force/tally|heat/flux/tally|heat/flux/virial/tally|pe/tally|pe/mol/tally|smd/tlsph/defgrad|erotate/sphere/atom|ptm/atom|vacf|temp/drude|smd/tlsph/stress|smd/triangle/vertices|dihedral/local|compute|ke|adf|erotate/asphere|viscosity/cos|dipole|gyration/shape/chunk|sph/rho/atom|angle/local|coord/atom|coord/atom/kk|voronoi/atom|pace|chunk/atom|temp/profile|temp/rotate|centro/atom|tdpd/cc/atom|inertia/chunk|omega/chunk|sph/t/atom|stress/cylinder|smd/hourglass/error|heat/flux|torque/chunk|vcm/chunk|temp/cs|smd/rho|smd/ulsph/effm|born/matrix|temp/uef|slice|fep/ta|smd/ulsph/strain/rate|smd/plastic/strain/rate|ke/atom/eff|pair|smd/tlsph/dt|rdf|damage/atom|stress/mop|temp/sphere|cnp/atom|temp/ramp|erotate/sphere|erotate/sphere/kk|smd/ulsph/strain|ti|rigid/local|msd/chunk|cluster/atom|fragment/atom|pair/local|ke/rigid|improper/local|smd/ulsph/stress|smd/internal/energy|sna/atom|snad/atom|snav/atom|snap|sna/grid|smd/tlsph/strain/rate|hma|temp/asphere|body/local|pe|temp/region/eff|pressure/alchemy|temp/com|property/atom|mliap|temp|temp/kk|fabric|dipole/chunk|smd/plastic/strain|ke/atom|property/grid|global/atom|smd/tlsph/shape|group/group|plasticity/atom|efield/wolf/atom|smd/contact/radius|smd/ulsph/num/neighs|com|composition/atom|composition/atom/kk|temp/partial|smd/tlsph/num/neighs|ke/eff|msd/nongauss|temp/region|com/chunk|fep|property/local|slcsa/atom|dpd/atom|erotate/rigid|dihedral|hexorder/atom|reduce|bond/local|gyration)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|tracker|wf/cut|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|spin/dipole/cut|smd/hertz|extep|hdnnp|lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|spin/dmi|zbl|zbl/gpu|zbl/kk|zbl/omp|sph/idealgas|lj/switch3/coulgauss/long|lj/relres|lj/relres/omp|list|kolmogorov/crespi/full|body/nparticle|coul/tt|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/kk|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|pod|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|lj/spica|lj/spica/gpu|lj/spica/kk|lj/spica/omp|lj/spica/coul/long|lj/spica/coul/long/gpu|lj/spica/coul/long/omp|lj/spica/coul/msm|lj/spica/coul/msm/omp|lcbop|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|smatb|spin/magelec|smd/tri_surface|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|drip|dpd/ext|dpd/ext/tstat|nb3b/harmonic|lepton|lepton/omp|aip/water/2dm|dpd|dpd/gpu|dpd/intel|dpd/kk|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/kk|dpd/tstat/omp|born/gauss|lj/cut/sphere|nm/cut|nm/cut/omp|nm/cut/split|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|quip|resquared|resquared/gpu|resquared/omp|hybrid|hybrid/kk|hybrid/overlay|hybrid/overlay/kk|hybrid/scaled|lj/smooth|lj/smooth/gpu|lj/smooth/omp|smd/ulsph|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|lubricateU|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|pair_style|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/gpu|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/gpu|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|lj96/cut|lj96/cut/gpu|lj96/cut/omp|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/he|kim|colloid|colloid/gpu|colloid/omp|sph/rhosum|saip/metal|buck/long/coul/long|buck/long/coul/long/omp|sph/heatconduction|sph/heatconduction/gpu|soft|soft/gpu|soft/omp|multi/lucy/rx|multi/lucy/rx/kk|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|ufm|ufm/gpu|ufm/omp|ufm/opt|srp|snap|snap/intel|snap/kk|harmonic/cut|harmonic/cut/omp|lj/expand/sphere|mgpt|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|threebody/table|amoeba|amoeba/gpu|hippo|hippo/gpu|meam/sw/spline|meam/spline|meam/spline/omp|dsmc|lj/smooth/linear|lj/smooth/linear/omp|sph/lj|sph/lj/gpu|coul/cut/dielectric|coul/long/dielectric|lj/cut/coul/cut/dielectric|lj/cut/coul/cut/dielectric/omp|lj/cut/coul/debye/dielectric|lj/cut/coul/debye/dielectric/omp|lj/cut/coul/long/dielectric|lj/cut/coul/long/dielectric/omp|lj/cut/coul/msm/dielectric|morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|polymorphic|kolmogorov/crespi/z|smtbq|pace|pace/kk|pace/extrapolation|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/kk|yukawa/colloid/omp|rann|agni|agni/omp|body/rounded/polyhedron|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|sdpd/taitwater/isothermal|sph/taitwater/morris|python|none|sph/taitwater|sph/taitwater/gpu|eim|eim/omp|mie/cut|mie/cut/gpu|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp|granular|bop|gw|meam|meam/kk|meam/ms|meam/ms/kk|e3b|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|thole|lj/cut/thole/long|lj/cut/thole/long/omp|exp6/rx|exp6/rx/kk|local/density|lj/cubic|lj/cubic/gpu|lj/cubic/omp|lebedeva/z|mesocnt|table|table/gpu|table/kk|table/omp|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/exclude|coul/cut/global|coul/cut/omp/global|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|bpm/spring|edip|edip/omp|edip/multi|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|eff/cut|sw/angle/table|line/lj|spin/neel|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|lj/expand/coul/long/kk|ilp/tmd|reaxff|reaxff/kk|reaxff/omp|beck|beck/gpu|beck/omp|tri/lj|awpmd/cut|edpd|edpd/gpu|mdpd|mdpd/gpu|mdpd/rhosum|mliap|mliap/kk|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|ilp/graphene/hbn|atm|cosine/squared|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|zero|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|coul/slater|coul/slater/cut|coul/slater/long|coul/slater/long/gpu|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|brownian|brownian/omp|brownian/poly|brownian/poly/omp|ylz|table/rx|table/rx/kk|buck6d/coul/gauss/dsf|lj/mdf|buck/mdf|spin/exchange|coul/shield|smd/tlsph|sw|sw/gpu|sw/intel|sw/kk|sw/omp|sw/mod|sw/mod/omp|multi/lucy|body/rounded/polygon|tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|momb|comb|comb/omp|comb3|adp|adp/kk|adp/omp|coul/diel|coul/diel/omp|lj/charmm/coul/charmm|lj/charmm/coul/charmm/gpu|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|lj/charmmfsw/coul/long|lj/charmmfsw/coul/long/kk)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(bond_style|morse|morse/omp|none|mm3|gaussian|fene/expand|fene/expand/omp|harmonic/shift/cut|harmonic/shift/cut/omp|oxdna/fene|oxdna2/fene|quartic|quartic/omp|harmonic/restrain|nonlinear|nonlinear/omp|special|harmonic/shift|harmonic/shift/omp|hybrid|bpm/spring|class2|class2/omp|class2/kk|table|table/omp|fene|fene/intel|fene/kk|fene/omp|fene/nm|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|mesocnt|bpm/rotational|gromos|gromos/omp|zero|lepton|lepton/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(none|table|table/omp|mm3|cosine/squared|cosine/squared/omp|cross|angle_style|lepton|lepton/omp|cosine|cosine/omp|cosine/kk|cosine/shift|cosine/shift/omp|amoeba|fourier|fourier/omp|class2|class2/kk|class2/omp|class2/p6|hybrid|cosine/buck6d|mesocnt|dipole|dipole/omp|cosine/delta|cosine/delta/omp|charmm|charmm/intel|charmm/kk|charmm/omp|quartic|quartic/omp|spica|spica/omp|cosine/periodic|cosine/periodic/omp|cosine/shift/exp|cosine/shift/exp/omp|zero|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|gaussian|fourier/simple|fourier/simple/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(fourier|fourier/intel|fourier/omp|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw|charmmfsw/kk|spherical|dihedral_style|opls|opls/intel|opls/kk|opls/omp|lepton|lepton/omp|quadratic|quadratic/omp|class2|class2/omp|class2/kk|none|nharmonic|nharmonic/omp|helix|helix/omp|zero|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|table|table/omp|table/cut|cosine/shift/exp|cosine/shift/exp/omp|hybrid|multi/harmonic|multi/harmonic/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(distance|hybrid|inversion/harmonic|cvff|cvff/intel|cvff/omp|ring|ring/omp|umbrella|umbrella/omp|fourier|fourier/omp|distharm|class2|class2/omp|class2/kk|cossq|cossq/omp|none|sqdistharm|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|improper_style|amoeba|zero)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(dump|h5md|cfg/uef|netcdf|molfile|atom/adios|vtk|image|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(amoeba/bitorsion|print|mdi/qm|wall/reflect/stochastic|bocs|nvt/uef|filter/corotate|atom/swap|setforce|setforce/kk|setforce/spin|temp/csvr|nvt/manifold/rattle|nvt/sllod/eff|wall/piston|nvk|restrain|electrode/conp|electrode/conq|electrode/thermo|ave/chunk|wall/gran/region|nve/asphere|nve/asphere/gpu|nve/asphere/intel|deform|deform/kk|move|nve/line|qbmsst|polarize/bem/gmres|polarize/bem/icc|msst|pair|addforce|flow/gauss|enforce2d|enforce2d/kk|wall/srd|ave/correlate|shake|shake/kk|rattle|lb/viscous|precession/spin|nonaffine/displacement|atc|adapt|gle|imd|phonon|nve/asphere/noforce|wall/reflect|wall/reflect/kk|spring/self|colvars|controller|nve/manifold/rattle|vector|external|rx|rx/kk|pimd/langevin|temp/berendsen|temp/berendsen/kk|indent|nve|nve/gpu|nve/intel|nve/kk|nve/omp|poems|property/atom|property/atom/kk|numdiff/virial|python/move|gcmc|alchemy|pour|tgnvt/drude|tfmc|hyper/global|qeq/reaxff|qeq/reaxff/kk|qeq/reaxff/omp|nve/dotc/langevin|sph/stationary|viscosity|npt/asphere|npt/asphere/omp|lb/fluid|wall/gran|wall/gran/kk|tmd|manifoldforce|rigid/meso|press/langevin|orient/fcc|ti/spring|nve/tri|numdiff|spring/rg|nve/spin|charge/regulation|bond/react|pafi|lineforce|append/atoms|tune/kspace|npt/body|qtb|oneway|sgcmc|nve/body|meso/move|dpd/energy|dpd/energy/kk|reaxff/species|reaxff/species/kk|nvt/body|smd/adjust_dt|momentum|momentum/kk|momentum/chunk|neb/spin|nph/sphere|nph/sphere/omp|planeforce|spring|box/relax|press/berendsen|brownian|brownian/sphere|reaxff/bonds|reaxff/bonds/kk|deposit|amoeba/pitorsion|fix|nph/asphere|nph/asphere/omp|langevin/spin|ave/time|addtorque|langevin|langevin/kk|grem|drude|wall/region|damping/cundall|mol/swap|heat|eos/table/rx|eos/table/rx/kk|saed/vtk|nvt/eff|npt/eff|wall/ees|edpd/source|adapt/fep|gld|eos/table|nve/eff|bond/swap|nve/dot|qmmm|gravity|gravity/omp|gravity/kk|wall/body/polyhedron|shardlow|shardlow/kk|temp/rescale|temp/rescale/kk|store/state|python/invoke|temp/rescale/eff|ave/correlate/long|mvv/dpd|mvv/edpd|propel/self|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|wall/lepton|wall/morse|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|freeze|freeze/kk|evaporate|ffl|nphug|nphug/omp|drude/transform/direct|ipi|electron/stopping|ave/histo|nve/bpm/sphere|hyper/local|cmap|smd/setvel|drag|ave/grid|mdi/qmmm|store/force|npt/sphere|npt/sphere/omp|ehex|sph|srd|viscous/sphere|ttm|ttm/grid|nvt|nvt/gpu|nvt/intel|nvt/kk|nvt/omp|npt|npt/gpu|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|smd|nvt/sphere|nvt/sphere/omp|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|nvt/sllod/kk|thermal/conductivity|halt|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|widom|smd/integrate_tlsph|langevin/eff|spring/chunk|acks2/reaxff|acks2/reaxff/kk|wall/body/polygon|nve/sphere|nve/sphere/omp|nve/sphere/kk|smd/wall_surface|efield|ave/atom|heat/flow|nve/awpmd|langevin/drude|neb|plumed|viscous|viscous/kk|aveforce|nve/noforce|smd/integrate_ulsph|nph/body|qeq/comb|qeq/comb/omp|eos/cv|smd/move_tri_surf|nve/limit|nvt/asphere|nvt/asphere/omp|recenter|dt/reset|dt/reset/kk|bond/break|balance|lb/momentum|accelerate/cos|rhok|npt/cauchy|bond/create)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(atomic_charge|add_molecule|delete_elements|contour_integral|equilibrium_start|write_restart|lumped_lambda_solve|remove_molecule|fix_modify|filter|reset_atomic_reference_positions|create_nodeset|remove_source|temperature_definition|boundary_faceset|output|computes|consistent_fe_initialization|remove_species|momentum|exchange|type|sample_frequency|pair_interactions|boundary_integral|nodeset|scale|decomposition|electron_integration|time_integration|unfix_flux|poisson_solver|atom_element_map|boundary_dynamics|add_to_nodeset|localized_lambda|reset_time|internal_quadrature|nodeset_to_elementset|reference_potential_energy|read_restart|material|read|gradients|volume_integral|source_integration|on_the_fly|track_displacement|add_species|thermal|unfix|mass_matrix|write_atom_weights|fields|initial|create_elementset|mask_direction|plane|internal_element_set|create|rates|source|fix|fix_flux|write|atom_weight|quadrature|kernel|box|kernel_bandwidth|fe_md_boundary)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(kim|reset_atoms|restart|processors|region|print|improper_coeff|dynamical_matrix|pair_modify|write_data|dump_modify|create_bonds|thermo_style|dielectric|create_box|write_dump|dihedral_coeff|neb/spin|group2ndx|write_restart|neighbor|bond_write|dihedral_write|uncompute|angle_write|fitpod|atom_style|quit|change_box|molecule|timer|thermo_modify|thermo|partition|units|mass|plugin|pair_coeff|if|neb|displace_atoms|read_data|variable|info|prd|temper/grem|comm_modify|lattice|group|bond_coeff|tad|newton|python|third_order|log|neigh_modify|include|min_style spin|min_style spin/cg|delete_atoms|compute_modify|temper|delete_bonds|run_style|echo|rerun|atom_modify|read_restart|kspace_modify|temper/npt|min_modify|balance|velocity|min_style cg|min_style hftn|min_style sd|min_style quickmin|min_style fire|special_bonds|clear|read_dump|jump|boundary|mdi|kspace_style|set|timestep|pair_write|write_coeff|hyper|undump|package|dimension|suffix|shell|comm_style|labelmap|run|next|replicate|minimize|label|reset_timestep|angle_coeff|unfix|create_atoms)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}