{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next|is_file)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_available|is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(improper|improper/local|ptm/atom|smd/damage|sna/atom|snad/atom|snav/atom|snap|sna/grid|pe|dipole/chunk|omega/chunk|basal/atom|smd/ulsph/stress|dpd/atom|smd/contact/radius|ackland/atom|bond|viscosity/cos|smd/tlsph/defgrad|temp/rotate|smd/ulsph/num/neighs|event/displace|hma|nbond/atom|adf|property/chunk|temp/deform/eff|chunk/atom|dipole|edpd/temp/atom|com|msd|entropy/atom|plasticity/atom|pressure|ke/eff|stress/atom|temp/sphere|erotate/sphere/atom|efield/wolf/atom|smd/tlsph/strain/rate|smd/hourglass/error|chunk/spread/atom|dpd|ave/sphere/atom|ave/sphere/atom/kk|sph/e/atom|angle/local|cnp/atom|torque/chunk|smd/plastic/strain/rate|body/local|smd/ulsph/strain|orientorder/atom|orientorder/atom/kk|ti|momentum|smd/tlsph/num/neighs|property/local|msd/chunk|global/atom|dihedral/local|temp/region/eff|coord/atom|coord/atom/kk|temp/deform|temp/deform/kk|erotate/asphere|stress/cartesian|stress/cylinder|contact/atom|inertia/chunk|msd/nongauss|dihedral|group/group|temp/profile|cluster/atom|fragment/atom|displace/atom|vcm/chunk|erotate/sphere|hexorder/atom|dilatation/atom|reduce/chunk|bond/local|damage/atom|temp/asphere|temp/body|property/atom|mliap|rigid/local|pair/local|pair|reduce|efield/atom|force/tally|heat/flux/tally|heat/flux/virial/tally|pe/tally|pe/mol/tally|ke|property/grid|temp/cs|born/matrix|temp/uef|sph/rho/atom|tdpd/cc/atom|gyration|smd/plastic/strain|gyration/chunk|smd/internal/energy|spin|compute|ke/atom/eff|com/chunk|xrd|temp/drude|temp/ramp|voronoi/atom|smd/tlsph/stress|heat/flux|sph/t/atom|rdf|cna/atom|erotate/rigid|fep/ta|ke/atom|slice|angmom/chunk|angle|smd/vol|vacf|smd/rho|ke/rigid|gyration/shape|temp/chunk|gyration/shape/chunk|centro/atom|temp/eff|smd/ulsph/effm|temp/com|saed|smd/ulsph/strain/rate|temp/partial|smd/tlsph/dt|smd/triangle/vertices|temp/region|pressure/uef|smd/tlsph/shape|stress/mop|fep|smd/tlsph/strain|temp|temp/kk|fabric|pe/atom)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(wf/cut|coul/tt|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|lj/expand/coul/long/kk|lj/mdf|buck/mdf|zbl|zbl/gpu|zbl/kk|zbl/omp|dpd|dpd/gpu|dpd/intel|dpd/kk|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/kk|dpd/tstat/omp|table|table/gpu|table/kk|table/omp|smd/ulsph|granular|kolmogorov/crespi/z|smatb|zero|lj96/cut|lj96/cut/gpu|lj96/cut/omp|polymorphic|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|ufm|ufm/gpu|ufm/omp|ufm/opt|quip|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|python|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|smd/tlsph|none|exp6/rx|exp6/rx/kk|cosine/squared|tri/lj|mliap|mliap/kk|sph/lj|coul/cut/dielectric|coul/long/dielectric|lj/cut/coul/cut/dielectric|lj/cut/coul/cut/dielectric/omp|lj/cut/coul/debye/dielectric|lj/cut/coul/debye/dielectric/omp|lj/cut/coul/long/dielectric|lj/cut/coul/long/dielectric/omp|lj/cut/coul/msm/dielectric|sph/heatconduction|sdpd/taitwater/isothermal|soft|soft/gpu|soft/omp|mie/cut|mie/cut/gpu|smd/tri_surface|coul/shield|ilp/tmd|local/density|spin/magelec|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|beck|beck/gpu|beck/omp|srp|nm/cut|nm/cut/omp|nm/cut/split|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|table/rx|table/rx/kk|mesocnt|coul/slater|coul/slater/cut|lubricateU|agni|agni/omp|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|lepton|lepton/omp|kim|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|awpmd/cut|spin/dmi|snap|snap/kk|amoeba|amoeba/gpu|hippo|hippo/gpu|tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|edpd|mdpd|mdpd/rhosum|sph/taitwater/morris|harmonic/cut|harmonic/cut/omp|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|mgpt|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|lj/smooth/linear|lj/smooth/linear/omp|eff/cut|comb|comb/omp|comb3|smtbq|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|bop|brownian|brownian/omp|brownian/poly|brownian/poly/omp|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|spin/exchange|e3b|saip/metal|dsmc|pace|pace/kk|pace/extrapolation|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|pair_style|lcbop|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|multi/lucy|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/omp|sph/taitwater|resquared|resquared/gpu|resquared/omp|dpd/ext|dpd/ext/tstat|buck/long/coul/long|buck/long/coul/long/omp|body/rounded/polygon|tracker|multi/lucy/rx|multi/lucy/rx/kk|bpm/spring|list|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/he|extep|coul/diel|coul/diel/omp|morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|sw|sw/gpu|sw/intel|sw/kk|sw/omp|sw/mod|sw/mod/omp|sph/rhosum|adp|adp/kk|adp/omp|pod|spin/neel|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|reaxff|reaxff/kk|reaxff/omp|lj/switch3/coulgauss/long|meam|meam/kk|meam/ms|meam/ms/kk|atm|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|momb|edip|edip/omp|edip/multi|threebody/table|nb3b/harmonic|lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|lj/smooth|lj/smooth/gpu|lj/smooth/omp|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|lj/cubic|lj/cubic/gpu|lj/cubic/omp|body/nparticle|gw|rann|smd/hertz|meam/sw/spline|sph/idealgas|thole|lj/cut/thole/long|lj/cut/thole/long/omp|ylz|meam/spline|meam/spline/omp|ilp/graphene/hbn|hdnnp|buck6d/coul/gauss/dsf|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/kk|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|hybrid|hybrid/kk|hybrid/overlay|hybrid/overlay/kk|hybrid/scaled|drip|line/lj|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/exclude|coul/cut/global|coul/cut/omp/global|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|body/rounded/polyhedron|eim|eim/omp|lj/charmm/coul/charmm|lj/charmm/coul/charmm/gpu|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|lj/spica|lj/spica/gpu|lj/spica/kk|lj/spica/omp|lj/spica/coul/long|lj/spica/coul/long/gpu|lj/spica/coul/long/omp|lj/spica/coul/msm|lj/spica/coul/msm/omp|kolmogorov/crespi/full|sw/angle/table|colloid|colloid/gpu|colloid/omp|lj/relres|lj/relres/omp|spin/dipole/cut|lebedeva/z)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(mesocnt|lepton|lepton/omp|quartic|quartic/omp|oxdna/fene|oxdna2/fene|gromos|gromos/omp|mm3|harmonic/shift/cut|harmonic/shift/cut/omp|morse|morse/omp|fene/expand|fene/expand/omp|special|table|table/omp|none|gaussian|fene|fene/intel|fene/kk|fene/omp|fene/nm|nonlinear|nonlinear/omp|hybrid|zero|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|bpm/rotational|bond_style|class2|class2/omp|class2/kk|bpm/spring|harmonic/shift|harmonic/shift/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(cosine/squared|cosine/squared/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|charmm|charmm/intel|charmm/kk|charmm/omp|hybrid|spica|spica/omp|cosine|cosine/omp|cosine/kk|cosine/shift|cosine/shift/omp|cosine/delta|cosine/delta/omp|mm3|dipole|dipole/omp|lepton|lepton/omp|none|table|table/omp|class2|class2/kk|class2/omp|class2/p6|cosine/shift/exp|cosine/shift/exp/omp|quartic|quartic/omp|cosine/periodic|cosine/periodic/omp|mesocnt|fourier/simple|fourier/simple/omp|cosine/buck6d|fourier|fourier/omp|zero|amoeba|angle_style|gaussian|cross)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(zero|dihedral_style|class2|class2/omp|class2/kk|multi/harmonic|multi/harmonic/omp|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw|hybrid|fourier|fourier/intel|fourier/omp|cosine/shift/exp|cosine/shift/exp/omp|lepton|lepton/omp|nharmonic|nharmonic/omp|none|table|table/omp|table/cut|helix|helix/omp|opls|opls/intel|opls/kk|opls/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|spherical|quadratic|quadratic/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(fourier|fourier/omp|none|distance|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|zero|improper_style|sqdistharm|cvff|cvff/intel|cvff/omp|ring|ring/omp|class2|class2/omp|class2/kk|inversion/harmonic|cossq|cossq/omp|distharm|umbrella|umbrella/omp|hybrid)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(molfile|cfg/uef|image|movie|h5md|netcdf|atom/adios|vtk|dump)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(nve/dotc/langevin|enforce2d|enforce2d/kk|damping/cundall|append/atoms|sgcmc|ehex|reaxff/bonds|reaxff/bonds/kk|propel/self|halt|freeze|freeze/kk|addtorque|adapt|tmd|nve/sphere|nve/sphere/omp|nve/sphere/kk|drude/transform/direct|nve|nve/gpu|nve/intel|nve/kk|nve/omp|ave/chunk|momentum|momentum/kk|momentum/chunk|electron/stopping|nph/sphere|nph/sphere/omp|ave/grid|efield|nve/tri|store/state|tune/kspace|npt/sphere|npt/sphere/omp|langevin/drude|press/berendsen|acks2/reaxff|acks2/reaxff/kk|ave/histo|cmap|nvt/uef|electrode/conp|electrode/conq|electrode/thermo|drag|spring|nve/asphere|nve/asphere/gpu|nve/asphere/intel|pimd|bond/create|qtb|sph/stationary|property/atom|property/atom/kk|nve/line|vector|lb/viscous|smd/wall_surface|edpd/source|lineforce|eos/table/rx|eos/table/rx/kk|smd/adjust_dt|neb|wall/body/polyhedron|nve/eff|deform|deform/kk|temp/csvr|wall/body/polygon|wall/piston|eos/cv|nvt/manifold/rattle|nphug|nphug/omp|smd/move_tri_surf|oneway|ti/spring|mol/swap|bond/react|nve/awpmd|atc|temp/rescale/eff|nve/body|box/relax|colvars|python/move|smd|nvk|heat|nvt/asphere|nvt/asphere/omp|recenter|gld|poems|mscg|shardlow|shardlow/kk|ffl|eos/table|bocs|fix|spring/chunk|charge/regulation|nph/body|dt/reset|dt/reset/kk|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|atom/swap|imd|mdi/qm|tfmc|pair|temp/rescale|wall/ees|ave/correlate|nvt|nvt/gpu|nvt/intel|nvt/kk|nvt/omp|npt|npt/gpu|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|nve/spin|thermal/conductivity|nvt/sllod/eff|nve/noforce|amoeba/bitorsion|viscosity|hyper/global|nve/dot|dpd/energy|dpd/energy/kk|bond/swap|smd/setvel|qeq/comb|qeq/comb/omp|sph|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|ttm|ttm/grid|nve/bpm/sphere|print|hyper/local|langevin/eff|filter/corotate|smd/integrate_ulsph|pour|nvt/body|ave/time|balance|wall/reflect/stochastic|numdiff/virial|spring/rg|phonon|msst|ave/correlate/long|rigid/meso|aveforce|rx|rx/kk|deposit|widom|move|npt/cauchy|npt/body|nvt/eff|npt/eff|srd|meso/move|flow/gauss|nph/asphere|nph/asphere/omp|saed/vtk|npt/asphere|npt/asphere/omp|wall/gran|orient/fcc|adapt/fep|python/invoke|ave/atom|accelerate/cos|evaporate|store/force|pafi|neb/spin|addforce|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|nvt/sllod/kk|plumed|qmmm|viscous|viscous/kk|langevin/spin|lb/fluid|ipi|wall/reflect|wall/reflect/kk|nve/limit|nve/asphere/noforce|brownian|brownian/sphere|bond/break|langevin|langevin/kk|lb/momentum|gle|grem|controller|wall/srd|temp/berendsen|tgnvt/drude|amoeba/pitorsion|gravity|gravity/omp|gravity/kk|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|drude|polarize/bem/gmres|polarize/bem/icc|wall/region|restrain|qeq/reaxff|qeq/reaxff/kk|qeq/reaxff/omp|qbmsst|wall/gran/region|nve/manifold/rattle|latte|rhok|indent|shake|shake/kk|rattle|nvt/sphere|nvt/sphere/omp|precession/spin|setforce|setforce/kk|setforce/spin|reaxff/species|reaxff/species/kk|manifoldforce|mvv/dpd|mvv/edpd|planeforce|external|smd/integrate_tlsph|numdiff|gcmc|spring/self|viscous/sphere)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(boundary_dynamics|remove_species|nodeset|unfix|scale|fix_modify|thermal|atom_element_map|fields|add_to_nodeset|atomic_charge|localized_lambda|fix_flux|boundary_integral|internal_quadrature|computes|decomposition|momentum|write_atom_weights|sample_frequency|add_species|volume_integral|atom_weight|output|initial|mass_matrix|source|remove_molecule|quadrature|add_molecule|pair_interactions|reference_potential_energy|create_nodeset|fix|type|exchange|source_integration|poisson_solver|consistent_fe_initialization|temperature_definition|unfix_flux|mask_direction|equilibrium_start|write|read_restart|gradients|on_the_fly|track_displacement|kernel|nodeset_to_elementset|boundary_faceset|time_integration|create_elementset|filter|read|plane|delete_elements|lumped_lambda_solve|material|write_restart|internal_element_set|box|kernel_bandwidth|fe_md_boundary|reset_time|electron_integration|contour_integral|reset_atomic_reference_positions|rates|remove_source|create)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(thermo|read_dump|thermo_modify|create_bonds|comm_modify|dielectric|hyper|info|min_style spin|min_style spin/cg|if|log|temper|pair_write|write_dump|dynamical_matrix|dynamical_matrix/kk|bond_write|write_data|temper/grem|dihedral_write|clear|reset_timestep|bond_coeff|kspace_style|plugin|atom_style|timestep|units|lattice|atom_modify|create_box|region|next|write_restart|run_style|restart|improper_coeff|unfix|variable|group2ndx|temper/npt|pair_modify|thermo_style|mdi|delete_bonds|min_style cg|min_style hftn|min_style sd|min_style quickmin|min_style fire|read_data|min_modify|prd|suffix|kspace_modify|pair_coeff|kim|replicate|neb/spin|uncompute|neighbor|print|delete_atoms|dimension|change_box|mass|boundary|timer|read_restart|dump_modify|create_atoms|neb|angle_write|dihedral_coeff|quit|set|write_coeff|special_bonds|echo|label|package|shell|undump|displace_atoms|run|neigh_modify|compute_modify|jump|include|newton|group|minimize|tad|fitpod|labelmap|processors|comm_style|partition|balance|third_order|third_order/kk|rerun|velocity|angle_coeff|python|reset_atoms|molecule)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}