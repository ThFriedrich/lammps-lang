{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next|is_file)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_available|is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(force/tally|heat/flux/tally|heat/flux/virial/tally|pe/tally|pe/mol/tally|smd/contact/radius|cluster/atom|fragment/atom|stress/cartesian|stress/cylinder|ke/atom/eff|smd/plastic/strain|temp/com|erotate/sphere/atom|nbond/atom|entropy/atom|global/atom|reduce|smd/tlsph/num/neighs|smd/hourglass/error|sph/t/atom|ti|coord/atom|coord/atom/kk|dihedral/local|temp/chunk|com/chunk|smd/tlsph/defgrad|msd/chunk|group/group|reduce/chunk|damage/atom|gyration/shape|ke/eff|sph/e/atom|temp/profile|dipole/chunk|body/local|improper|sph/rho/atom|fep/ta|event/displace|temp/eff|erotate/asphere|angmom/chunk|bond/local|ave/sphere/atom|ave/sphere/atom/kk|temp/sphere|viscosity/cos|temp/region/eff|sna/atom|snad/atom|snav/atom|snap|sna/grid|dihedral|angle/local|smd/triangle/vertices|property/local|adf|chunk/atom|mesont|smd/tlsph/strain|property/grid|dilatation/atom|smd/damage|angle|centro/atom|chunk/spread/atom|heat/flux|ke/rigid|rdf|omega/chunk|erotate/sphere|smd/rho|cna/atom|edpd/temp/atom|smd/internal/energy|fep|inertia/chunk|ke|smd/vol|hma|pe|temp/rotate|gyration/shape/chunk|temp/deform/eff|property/atom|temp/deform|temp/deform/kk|temp/body|pressure/uef|temp/drude|smd/ulsph/stress|pe/atom|basal/atom|improper/local|dpd|temp/cs|pair|bond|temp/partial|smd/tlsph/stress|smd/ulsph/strain/rate|ke/atom|rigid/local|displace/atom|smd/tlsph/shape|msd/nongauss|smd/tlsph/strain/rate|dipole|temp/region|voronoi/atom|orientorder/atom|orientorder/atom/kk|ackland/atom|property/chunk|mliap|contact/atom|smd/tlsph/dt|hexorder/atom|stress/atom|vacf|pair/local|smd/ulsph/num/neighs|efield/atom|smd/ulsph/strain|gyration/chunk|xrd|torque/chunk|smd/ulsph/effm|com|pressure|vcm/chunk|fabric|smd/plastic/strain/rate|temp/asphere|stress/mop|dpd/atom|temp/ramp|msd|temp|temp/kk|ptm/atom|compute|saed|tdpd/cc/atom|erotate/rigid|cnp/atom|slice|momentum|temp/uef|spin|gyration|plasticity/atom|born/matrix)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|zero|bpm/spring|dpd/ext|dpd/ext/tstat|soft|soft/gpu|soft/omp|ufm|ufm/gpu|ufm/omp|ufm/opt|reaxff|reaxff/kk|reaxff/omp|lj/cubic|lj/cubic/gpu|lj/cubic/omp|multi/lucy/rx|multi/lucy/rx/kk|mesocnt|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|nb3b/harmonic|sph/rhosum|sw|sw/gpu|sw/intel|sw/kk|sw/omp|sw/mod|sw/mod/omp|spin/neel|table|table/gpu|table/kk|table/omp|polymorphic|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/omp|cosine/squared|lebedeva/z|buck6d/coul/gauss/dsf|beck|beck/gpu|beck/omp|snap|snap/kk|spin/dipole/cut|meam/spline|meam/spline/omp|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|meam/sw/spline|tri/lj|extep|sph/taitwater/morris|ilp/graphene/hbn|list|harmonic/cut|harmonic/cut/omp|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|sph/heatconduction|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|coul/tt|spin/magelec|amoeba|gw|coul/slater|coul/slater/cut|lj/smooth|lj/smooth/gpu|lj/smooth/omp|coul/shield|e3b|body/nparticle|ilp/tmd|momb|sph/taitwater|adp|adp/kk|adp/omp|ylz|awpmd/cut|sdpd/taitwater/isothermal|lj/spica|lj/spica/gpu|lj/spica/kk|lj/spica/omp|lj/spica/coul/long|lj/spica/coul/long/gpu|lj/spica/coul/long/omp|lj/spica/coul/msm|lj/spica/coul/msm/omp|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|smd/tlsph|thole|lj/cut/thole/long|lj/cut/thole/long/omp|sph/idealgas|lj/charmm/coul/charmm|lj/charmm/coul/charmm/gpu|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|coul/cut/dielectric|coul/long/dielectric|lj/cut/coul/cut/dielectric|lj/cut/coul/cut/dielectric/omp|lj/cut/coul/debye/dielectric|lj/cut/coul/debye/dielectric/omp|lj/cut/coul/long/dielectric|lj/cut/coul/long/dielectric/omp|lj/cut/coul/msm/dielectric|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|none|coul/diel|coul/diel/omp|srp|buck/long/coul/long|buck/long/coul/long/omp|bop|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|zbl|zbl/gpu|zbl/kk|zbl/omp|nm/cut|nm/cut/omp|nm/cut/split|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|lj/smooth/linear|lj/smooth/linear/omp|tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|python|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp|body/rounded/polyhedron|smtbq|multi/lucy|colloid|colloid/gpu|colloid/omp|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|pace|pace/kk|pace/extrapolation|pair_style|quip|dpd|dpd/gpu|dpd/intel|dpd/kk|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/kk|dpd/tstat/omp|meam|meam/kk|exp6/rx|exp6/rx/kk|kolmogorov/crespi/z|edip|edip/omp|edip/multi|dsmc|sw/angle/table|pod|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|kim|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/exclude|coul/cut/global|coul/cut/omp/global|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|table/rx|table/rx/kk|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|agni|agni/omp|lj/switch3/coulgauss/long|mgpt|threebody/table|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|kolmogorov/crespi/full|tracker|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/he|mie/cut|mie/cut/gpu|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|smd/tri_surface|mliap|mliap/kk|brownian|brownian/omp|brownian/poly|brownian/poly/omp|drip|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|spin/exchange|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|eff/cut|lj/mdf|buck/mdf|wf/cut|lubricateU|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|comb|comb/omp|comb3|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|smd/ulsph|saip/metal|mesont/tpm|eim|eim/omp|rann|hdnnp|smd/hertz|resquared|resquared/gpu|resquared/omp|granular|hybrid|hybrid/kk|hybrid/overlay|hybrid/overlay/kk|hybrid/scaled|lj/relres|lj/relres/omp|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|lcbop|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|local/density|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|spin/dmi|smatb|sph/lj|atm|line/lj|body/rounded/polygon|lj96/cut|lj96/cut/gpu|lj96/cut/omp|edpd|mdpd|mdpd/rhosum)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(bpm/rotational|gaussian|nonlinear|nonlinear/omp|oxdna/fene|oxdna2/fene|class2|class2/omp|class2/kk|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|hybrid|table|table/omp|bpm/spring|gromos|gromos/omp|mm3|morse|morse/omp|harmonic/shift|harmonic/shift/omp|mesocnt|harmonic/shift/cut|harmonic/shift/cut/omp|zero|fene/expand|fene/expand/omp|quartic|quartic/omp|bond_style|fene|fene/intel|fene/kk|fene/omp|fene/nm|special|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(cosine|cosine/omp|cosine/kk|dipole|dipole/omp|none|gaussian|hybrid|cosine/delta|cosine/delta/omp|zero|class2|class2/kk|class2/omp|class2/p6|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|angle_style|charmm|charmm/intel|charmm/kk|charmm/omp|cosine/periodic|cosine/periodic/omp|cross|quartic|quartic/omp|spica|spica/omp|cosine/squared|cosine/squared/omp|cosine/shift|cosine/shift/omp|cosine/shift/exp|cosine/shift/exp/omp|fourier|fourier/omp|mm3|table|table/omp|fourier/simple|fourier/simple/omp|mesocnt|amoeba|cosine/buck6d)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(cosine/shift/exp|cosine/shift/exp/omp|zero|nharmonic|nharmonic/omp|helix|helix/omp|fourier|fourier/intel|fourier/omp|hybrid|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|opls|opls/intel|opls/kk|opls/omp|none|quadratic|quadratic/omp|dihedral_style|multi/harmonic|multi/harmonic/omp|spherical|class2|class2/omp|class2/kk|table|table/omp|table/cut|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(distance|ring|ring/omp|none|class2|class2/omp|class2/kk|sqdistharm|hybrid|umbrella|umbrella/omp|fourier|fourier/omp|distharm|zero|improper_style|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|cvff|cvff/intel|cvff/omp|inversion/harmonic|cossq|cossq/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(vtk|h5md|atom/adios|molfile|cfg/uef|dump|image|movie|netcdf)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(meso/move|ave/time|precession/spin|srd|nvk|brownian|brownian/sphere|smd/move_tri_surf|langevin/spin|fix|acks2/reaxff|acks2/reaxff/kk|nvt/asphere|nvt/asphere/omp|drude|temp/csvr|wall/piston|move|npt/body|plumed|filter/corotate|nphug|nphug/omp|numdiff/virial|dt/reset|dt/reset/kk|nve/sphere|nve/sphere/omp|nve/sphere/kk|wall/gran/region|cmap|electron/stopping|langevin/eff|qbmsst|setforce|setforce/kk|setforce/spin|spring/rg|hyper/global|mscg|momentum|momentum/kk|momentum/chunk|shardlow|shardlow/kk|bond/break|amoeba/pitorsion|mol/swap|nve/noforce|nvt/sphere|nvt/sphere/omp|nve/dotc/langevin|halt|adapt|dpd/energy|dpd/energy/kk|polarize/bem/gmres|polarize/bem/icc|eos/cv|langevin|langevin/kk|qtb|nvt/manifold/rattle|temp/rescale|python/move|nve/limit|tune/kspace|smd/adjust_dt|bond/create|controller|efield|tmd|pour|eos/table/rx|eos/table/rx/kk|box/relax|edpd/source|adapt/fep|restrain|oneway|damping/cundall|ffl|nph/asphere|nph/asphere/omp|nve|nve/gpu|nve/intel|nve/kk|nve/omp|msst|nve/body|nve/bpm/sphere|atc|rx|rx/kk|viscous/sphere|charge/regulation|balance|press/berendsen|langevin/drude|wall/body/polyhedron|nph/sphere|nph/sphere/omp|store/state|npt/cauchy|gcmc|property/atom|property/atom/kk|sph/stationary|wall/reflect|wall/reflect/kk|sph|poems|wall/reflect/stochastic|lineforce|ehex|vector|viscosity|mdi/qm|bocs|wall/ees|widom|hyper/local|addtorque|qeq/comb|qeq/comb/omp|gravity|gravity/omp|gravity/kk|wall/body/polygon|colvars|ave/correlate/long|nve/line|numdiff|evaporate|reaxff/species|reaxff/species/kk|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|nvt/sllod/kk|pimd|tfmc|lb/fluid|nve/dot|nvt/sllod/eff|ave/correlate|manifoldforce|wall/gran|ti/spring|rhok|mvv/dpd|mvv/edpd|smd/integrate_ulsph|pair|ave/chunk|nve/eff|accelerate/cos|smd|store/force|flow/gauss|grem|eos/table|nve/spin|nvt/uef|deposit|qeq/reaxff|qeq/reaxff/kk|qeq/reaxff/omp|nve/awpmd|gle|wall/srd|ave/histo|nve/asphere/noforce|orient/fcc|bond/swap|planeforce|imd|neb|freeze|freeze/kk|nve/asphere|nve/asphere/gpu|nve/asphere/intel|external|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|electrode/conp|electrode/conq|electrode/thermo|rigid/meso|smd/integrate_tlsph|spring|smd/wall_surface|atom/swap|lb/viscous|spring/chunk|nvt|nvt/gpu|nvt/intel|nvt/kk|nvt/omp|npt|npt/gpu|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|aveforce|wall/region|nve/manifold/rattle|enforce2d|enforce2d/kk|ttm|ttm/grid|append/atoms|nvt/eff|npt/eff|print|deform|deform/kk|pafi|tgnvt/drude|reaxff/bonds|reaxff/bonds/kk|phonon|temp/berendsen|viscous|viscous/kk|temp/rescale/eff|heat|qmmm|ipi|drag|lb/momentum|ave/grid|saed/vtk|bond/react|indent|spring/self|drude/transform/direct|ave/atom|nvt/body|latte|propel/self|npt/sphere|npt/sphere/omp|gld|smd/setvel|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|python/invoke|addforce|nph/body|amoeba/bitorsion|neb/spin|thermal/conductivity|shake|shake/kk|rattle|recenter|nve/tri|npt/asphere|npt/asphere/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(reference_potential_energy|remove_source|unfix|pair_interactions|source|atomic_charge|sample_frequency|source_integration|thermal|rates|gradients|localized_lambda|initial|nodeset|create_nodeset|mass_matrix|boundary_integral|unfix_flux|volume_integral|fix|kernel_bandwidth|reset_atomic_reference_positions|remove_molecule|filter|lumped_lambda_solve|temperature_definition|write_restart|on_the_fly|nodeset_to_elementset|write|boundary_faceset|computes|track_displacement|type|create|material|electron_integration|write_atom_weights|momentum|delete_elements|fix_modify|atom_element_map|poisson_solver|fe_md_boundary|output|create_elementset|contour_integral|reset_time|atom_weight|remove_species|box|read_restart|add_to_nodeset|mask_direction|consistent_fe_initialization|decomposition|quadrature|fix_flux|scale|exchange|kernel|equilibrium_start|fields|add_species|time_integration|read|internal_element_set|plane|internal_quadrature|boundary_dynamics|add_molecule)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(restart|kspace_modify|processors|print|neighbor|min_style spin|min_style spin/cg|run_style|unfix|atom_style|delete_atoms|label|displace_atoms|write_data|plugin|lattice|mass|minimize|info|variable|delete_bonds|undump|temper|neigh_modify|compute_modify|if|special_bonds|temper/npt|hyper|comm_style|thermo_style|rerun|dynamical_matrix|dynamical_matrix/kk|kspace_style|third_order|third_order/kk|group2ndx|suffix|pair_write|create_box|units|balance|thermo_modify|mdi|log|newton|run|tad|replicate|kim|python|dihedral_coeff|min_modify|write_coeff|boundary|shell|labelmap|dimension|region|quit|write_dump|create_bonds|read_data|dielectric|bond_coeff|next|set|include|min_style cg|min_style hftn|min_style sd|min_style quickmin|min_style fire|min_style fire/old|group|comm_modify|improper_coeff|pair_modify|partition|read_dump|create_atoms|angle_coeff|echo|neb|velocity|jump|clear|reset_timestep|molecule|dump_modify|read_restart|thermo|change_box|temper/grem|timestep|pair_coeff|timer|write_restart|prd|fitpod|package|reset_atoms|atom_modify|neb/spin|uncompute|bond_write)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}